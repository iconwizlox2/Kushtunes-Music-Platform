"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/analytics/route";
exports.ids = ["app/api/analytics/route"];
exports.modules = {

/***/ "@prisma/client/runtime/library.js":
/*!****************************************************!*\
  !*** external "@prisma/client/runtime/library.js" ***!
  \****************************************************/
/***/ ((module) => {

module.exports = require("@prisma/client/runtime/library.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.ts&appDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.ts&appDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _Users_wizloxssd_Downloads_kushtunes_starter_app_api_analytics_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/analytics/route.ts */ \"(rsc)/./app/api/analytics/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/analytics/route\",\n        pathname: \"/api/analytics\",\n        filename: \"route\",\n        bundlePath: \"app/api/analytics/route\"\n    },\n    resolvedPagePath: \"/Users/wizloxssd/Downloads/kushtunes-starter/app/api/analytics/route.ts\",\n    nextConfigOutput,\n    userland: _Users_wizloxssd_Downloads_kushtunes_starter_app_api_analytics_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/analytics/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZhbmFseXRpY3MlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRmFuYWx5dGljcyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRmFuYWx5dGljcyUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRndpemxveHNzZCUyRkRvd25sb2FkcyUyRmt1c2h0dW5lcy1zdGFydGVyJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRndpemxveHNzZCUyRkRvd25sb2FkcyUyRmt1c2h0dW5lcy1zdGFydGVyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNxQztBQUNwRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNpSjs7QUFFakoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rdXNodHVuZXMtbW9iaWxlLWFwcC8/OGMzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvd2l6bG94c3NkL0Rvd25sb2Fkcy9rdXNodHVuZXMtc3RhcnRlci9hcHAvYXBpL2FuYWx5dGljcy9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvYW5hbHl0aWNzL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvYW5hbHl0aWNzXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS9hbmFseXRpY3Mvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvd2l6bG94c3NkL0Rvd25sb2Fkcy9rdXNodHVuZXMtc3RhcnRlci9hcHAvYXBpL2FuYWx5dGljcy9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS9hbmFseXRpY3Mvcm91dGVcIjtcbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.ts&appDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/analytics/route.ts":
/*!************************************!*\
  !*** ./app/api/analytics/route.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _barrel_optimize_names_PrismaClient_prisma_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! __barrel_optimize__?names=PrismaClient!=!@prisma/client */ \"(rsc)/./node_modules/@prisma/client/default.js\");\n/* harmony import */ var _barrel_optimize_names_PrismaClient_prisma_client__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_barrel_optimize_names_PrismaClient_prisma_client__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./lib/auth.ts\");\n/* harmony import */ var _lib_analytics_logic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/analytics-logic */ \"(rsc)/./lib/analytics-logic.ts\");\n\n\n\n\nconst prisma = new _barrel_optimize_names_PrismaClient_prisma_client__WEBPACK_IMPORTED_MODULE_3__.PrismaClient();\nasync function GET(request) {\n    try {\n        // Extract and verify authentication token\n        const authHeader = request.headers.get(\"authorization\");\n        const token = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_1__.extractTokenFromHeader)(authHeader);\n        if (!token) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: \"Authentication required\"\n            }, {\n                status: 401\n            });\n        }\n        const user = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_1__.verifyToken)(token);\n        if (!user) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: \"Invalid authentication token\"\n            }, {\n                status: 401\n            });\n        }\n        const { searchParams } = new URL(request.url);\n        const releaseId = searchParams.get(\"releaseId\");\n        const trackId = searchParams.get(\"trackId\");\n        const period = searchParams.get(\"period\") || \"monthly\";\n        const startDate = searchParams.get(\"startDate\");\n        const endDate = searchParams.get(\"endDate\");\n        // Build date filter\n        const dateFilter = {};\n        if (startDate) {\n            dateFilter.gte = new Date(startDate);\n        }\n        if (endDate) {\n            dateFilter.lte = new Date(endDate);\n        }\n        // Get user's releases\n        const releases = await prisma.release.findMany({\n            where: {\n                primaryArtistId: user.id\n            },\n            include: {\n                tracks: true\n            }\n        });\n        const releaseIds = releases.map((r)=>r.id);\n        const trackIds = releases.flatMap((r)=>r.tracks.map((t)=>t.id));\n        if (releaseId) {\n            // Get analytics for specific release\n            const release = releases.find((r)=>r.id === releaseId);\n            if (!release) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    success: false,\n                    message: \"Release not found\"\n                }, {\n                    status: 404\n                });\n            }\n            // Mock stream data for the release\n            const streamData = generateMockStreamData(releaseId, trackIds, dateFilter);\n            const analytics = (0,_lib_analytics_logic__WEBPACK_IMPORTED_MODULE_2__.calculateReleaseAnalytics)(releaseId, streamData, release);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: true,\n                data: {\n                    release: {\n                        id: release.id,\n                        title: release.title,\n                        releaseDate: release.releaseDate,\n                        status: release.status\n                    },\n                    analytics: {\n                        ...analytics,\n                        insights: (0,_lib_analytics_logic__WEBPACK_IMPORTED_MODULE_2__.generatePerformanceInsights)({\n                            totalStreams: analytics.totalStreams,\n                            totalRevenue: analytics.totalRevenue,\n                            totalTracks: analytics.trackCount,\n                            totalReleases: 1,\n                            topCountries: analytics.tracks.reduce((acc, track)=>[\n                                    ...acc,\n                                    ...track.topCountries\n                                ], []),\n                            topPlatforms: analytics.tracks.reduce((acc, track)=>[\n                                    ...acc,\n                                    ...track.topPlatforms\n                                ], []),\n                            monthlyGrowth: []\n                        })\n                    }\n                }\n            });\n        }\n        if (trackId) {\n            // Get analytics for specific track\n            const track = releases.flatMap((r)=>r.tracks).find((t)=>t.id === trackId);\n            if (!track) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    success: false,\n                    message: \"Track not found\"\n                }, {\n                    status: 404\n                });\n            }\n            // Mock stream data for the track\n            const streamData = generateMockStreamData(releaseId, [\n                trackId\n            ], dateFilter);\n            const analytics = (0,_lib_analytics_logic__WEBPACK_IMPORTED_MODULE_2__.calculateTrackAnalytics)(trackId, streamData, track.title);\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: true,\n                data: {\n                    track: {\n                        id: track.id,\n                        title: track.title,\n                        releaseId: track.releaseId\n                    },\n                    analytics\n                }\n            });\n        }\n        // Get overall analytics for user\n        const streamData = generateMockStreamData(null, trackIds, dateFilter);\n        const analytics = (0,_lib_analytics_logic__WEBPACK_IMPORTED_MODULE_2__.generateAnalyticsSummary)(streamData, releases, releases.flatMap((r)=>r.tracks));\n        const insights = (0,_lib_analytics_logic__WEBPACK_IMPORTED_MODULE_2__.generatePerformanceInsights)(analytics);\n        const timeBasedAnalytics = (0,_lib_analytics_logic__WEBPACK_IMPORTED_MODULE_2__.getTimeBasedAnalytics)(streamData, period);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: true,\n            data: {\n                summary: {\n                    ...analytics,\n                    insights,\n                    timeBasedAnalytics\n                },\n                releases: releases.map((release)=>({\n                        id: release.id,\n                        title: release.title,\n                        status: release.status,\n                        trackCount: release.tracks.length,\n                        releaseDate: release.releaseDate\n                    }))\n            }\n        });\n    } catch (error) {\n        console.error(\"Analytics error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            message: \"Failed to fetch analytics\"\n        }, {\n            status: 500\n        });\n    }\n}\n// Generate mock stream data for demonstration\nfunction generateMockStreamData(releaseId, trackIds, dateFilter) {\n    const platforms = [\n        \"spotify\",\n        \"apple-music\",\n        \"youtube-music\",\n        \"amazon-music\",\n        \"deezer\"\n    ];\n    const countries = [\n        \"US\",\n        \"GB\",\n        \"CA\",\n        \"AU\",\n        \"DE\",\n        \"FR\",\n        \"IT\",\n        \"ES\",\n        \"NL\",\n        \"SE\"\n    ];\n    const streamData = [];\n    const startDate = dateFilter.gte || new Date(Date.now() - 90 * 24 * 60 * 60 * 1000); // 90 days ago\n    const endDate = dateFilter.lte || new Date();\n    // Generate data for each track\n    trackIds.forEach((trackId)=>{\n        if (releaseId && !trackId.startsWith(releaseId)) return;\n        // Generate daily data for the last 90 days\n        for(let d = new Date(startDate); d <= endDate; d.setDate(d.getDate() + 1)){\n            platforms.forEach((platform)=>{\n                countries.forEach((country)=>{\n                    const streams = Math.floor(Math.random() * 1000) + 100;\n                    const revenue = streams * (Math.random() * 0.01 + 0.003); // $0.003-$0.013 per stream\n                    streamData.push({\n                        id: `${trackId}_${platform}_${country}_${d.toISOString().split(\"T\")[0]}`,\n                        releaseId: releaseId || trackId.split(\"_\")[0],\n                        trackId,\n                        platform,\n                        country,\n                        date: new Date(d),\n                        streams,\n                        revenue: Math.round(revenue * 100) / 100,\n                        currency: \"USD\"\n                    });\n                });\n            });\n        }\n    });\n    return streamData;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/analytics/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/analytics-logic.ts":
/*!********************************!*\
  !*** ./lib/analytics-logic.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateAverageStreamsPerDay: () => (/* binding */ calculateAverageStreamsPerDay),\n/* harmony export */   calculateConversionRate: () => (/* binding */ calculateConversionRate),\n/* harmony export */   calculateGrowthPercentage: () => (/* binding */ calculateGrowthPercentage),\n/* harmony export */   calculateMonthlyGrowth: () => (/* binding */ calculateMonthlyGrowth),\n/* harmony export */   calculateReleaseAnalytics: () => (/* binding */ calculateReleaseAnalytics),\n/* harmony export */   calculateRevenuePerStream: () => (/* binding */ calculateRevenuePerStream),\n/* harmony export */   calculateTotalRevenue: () => (/* binding */ calculateTotalRevenue),\n/* harmony export */   calculateTotalStreams: () => (/* binding */ calculateTotalStreams),\n/* harmony export */   calculateTrackAnalytics: () => (/* binding */ calculateTrackAnalytics),\n/* harmony export */   formatCurrency: () => (/* binding */ formatCurrency),\n/* harmony export */   formatNumber: () => (/* binding */ formatNumber),\n/* harmony export */   generateAnalyticsSummary: () => (/* binding */ generateAnalyticsSummary),\n/* harmony export */   generatePerformanceInsights: () => (/* binding */ generatePerformanceInsights),\n/* harmony export */   getTimeBasedAnalytics: () => (/* binding */ getTimeBasedAnalytics),\n/* harmony export */   getTopCountries: () => (/* binding */ getTopCountries),\n/* harmony export */   getTopPlatforms: () => (/* binding */ getTopPlatforms)\n/* harmony export */ });\n// Calculate total streams\nfunction calculateTotalStreams(streamData) {\n    return streamData.reduce((total, stream)=>total + stream.streams, 0);\n}\n// Calculate total revenue\nfunction calculateTotalRevenue(streamData) {\n    return streamData.reduce((total, stream)=>total + stream.revenue, 0);\n}\n// Get top countries by streams\nfunction getTopCountries(streamData, limit = 10) {\n    const countryMap = new Map();\n    streamData.forEach((stream)=>{\n        const existing = countryMap.get(stream.country) || {\n            streams: 0,\n            revenue: 0\n        };\n        countryMap.set(stream.country, {\n            streams: existing.streams + stream.streams,\n            revenue: existing.revenue + stream.revenue\n        });\n    });\n    return Array.from(countryMap.entries()).map(([country, data])=>({\n            country,\n            ...data\n        })).sort((a, b)=>b.streams - a.streams).slice(0, limit);\n}\n// Get top platforms by streams\nfunction getTopPlatforms(streamData, limit = 10) {\n    const platformMap = new Map();\n    streamData.forEach((stream)=>{\n        const existing = platformMap.get(stream.platform) || {\n            streams: 0,\n            revenue: 0\n        };\n        platformMap.set(stream.platform, {\n            streams: existing.streams + stream.streams,\n            revenue: existing.revenue + stream.revenue\n        });\n    });\n    return Array.from(platformMap.entries()).map(([platform, data])=>({\n            platform,\n            ...data\n        })).sort((a, b)=>b.streams - a.streams).slice(0, limit);\n}\n// Calculate monthly growth\nfunction calculateMonthlyGrowth(streamData) {\n    const monthMap = new Map();\n    streamData.forEach((stream)=>{\n        const month = stream.date.toISOString().substring(0, 7); // YYYY-MM format\n        const existing = monthMap.get(month) || {\n            streams: 0,\n            revenue: 0\n        };\n        monthMap.set(month, {\n            streams: existing.streams + stream.streams,\n            revenue: existing.revenue + stream.revenue\n        });\n    });\n    return Array.from(monthMap.entries()).map(([month, data])=>({\n            month,\n            ...data\n        })).sort((a, b)=>a.month.localeCompare(b.month));\n}\n// Calculate growth percentage\nfunction calculateGrowthPercentage(current, previous) {\n    if (previous === 0) return current > 0 ? 100 : 0;\n    return Math.round((current - previous) / previous * 100);\n}\n// Format currency\nfunction formatCurrency(amount, currency = \"USD\") {\n    return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: currency,\n        minimumFractionDigits: 2\n    }).format(amount);\n}\n// Format number with commas\nfunction formatNumber(num) {\n    return new Intl.NumberFormat(\"en-US\").format(num);\n}\n// Calculate average streams per day\nfunction calculateAverageStreamsPerDay(streamData) {\n    if (streamData.length === 0) return 0;\n    const dates = new Set(streamData.map((s)=>s.date.toISOString().split(\"T\")[0]));\n    const totalStreams = calculateTotalStreams(streamData);\n    return Math.round(totalStreams / dates.size);\n}\n// Calculate revenue per stream\nfunction calculateRevenuePerStream(streamData) {\n    const totalStreams = calculateTotalStreams(streamData);\n    const totalRevenue = calculateTotalRevenue(streamData);\n    return totalStreams > 0 ? totalRevenue / totalStreams : 0;\n}\n// Get analytics summary\nfunction generateAnalyticsSummary(streamData, releases, tracks) {\n    const totalStreams = calculateTotalStreams(streamData);\n    const totalRevenue = calculateTotalRevenue(streamData);\n    const totalTracks = tracks.length;\n    const totalReleases = releases.length;\n    const topCountries = getTopCountries(streamData, 10);\n    const topPlatforms = getTopPlatforms(streamData, 10);\n    const monthlyGrowth = calculateMonthlyGrowth(streamData);\n    return {\n        totalStreams,\n        totalRevenue,\n        totalTracks,\n        totalReleases,\n        topCountries,\n        topPlatforms,\n        monthlyGrowth\n    };\n}\n// Calculate track analytics\nfunction calculateTrackAnalytics(trackId, streamData, trackTitle) {\n    const trackStreams = streamData.filter((s)=>s.trackId === trackId);\n    const totalStreams = calculateTotalStreams(trackStreams);\n    const totalRevenue = calculateTotalRevenue(trackStreams);\n    const topCountries = getTopCountries(trackStreams, 5);\n    const topPlatforms = getTopPlatforms(trackStreams, 5);\n    // Group by date for daily streams\n    const dailyMap = new Map();\n    trackStreams.forEach((stream)=>{\n        const date = stream.date.toISOString().split(\"T\")[0];\n        dailyMap.set(date, (dailyMap.get(date) || 0) + stream.streams);\n    });\n    const dailyStreams = Array.from(dailyMap.entries()).map(([date, streams])=>({\n            date,\n            streams\n        })).sort((a, b)=>a.date.localeCompare(b.date));\n    return {\n        trackId,\n        trackTitle,\n        totalStreams,\n        totalRevenue,\n        topCountries,\n        topPlatforms,\n        dailyStreams\n    };\n}\n// Calculate release analytics\nfunction calculateReleaseAnalytics(releaseId, streamData, release) {\n    const releaseStreams = streamData.filter((s)=>s.releaseId === releaseId);\n    const totalStreams = calculateTotalStreams(releaseStreams);\n    const totalRevenue = calculateTotalRevenue(releaseStreams);\n    // Calculate analytics for each track\n    const tracks = release.tracks.map((track)=>calculateTrackAnalytics(track.id, releaseStreams, track.title));\n    return {\n        releaseId,\n        releaseTitle: release.metadata.title,\n        totalStreams,\n        totalRevenue,\n        trackCount: release.tracks.length,\n        tracks,\n        releaseDate: new Date(release.metadata.releaseDate),\n        distributionDate: release.distributionDate ? new Date(release.distributionDate) : undefined\n    };\n}\n// Generate performance insights\nfunction generatePerformanceInsights(analytics) {\n    const insights = [];\n    // Growth insights\n    if (analytics.monthlyGrowth.length >= 2) {\n        const latest = analytics.monthlyGrowth[analytics.monthlyGrowth.length - 1];\n        const previous = analytics.monthlyGrowth[analytics.monthlyGrowth.length - 2];\n        const streamGrowth = calculateGrowthPercentage(latest.streams, previous.streams);\n        const revenueGrowth = calculateGrowthPercentage(latest.revenue, previous.revenue);\n        if (streamGrowth > 0) {\n            insights.push(`Streams increased by ${streamGrowth}% this month`);\n        }\n        if (revenueGrowth > 0) {\n            insights.push(`Revenue increased by ${revenueGrowth}% this month`);\n        }\n    }\n    // Top performer insights\n    if (analytics.topCountries.length > 0) {\n        const topCountry = analytics.topCountries[0];\n        insights.push(`${topCountry.country} is your top market with ${formatNumber(topCountry.streams)} streams`);\n    }\n    if (analytics.topPlatforms.length > 0) {\n        const topPlatform = analytics.topPlatforms[0];\n        insights.push(`${topPlatform.platform} generates the most streams with ${formatNumber(topPlatform.streams)}`);\n    }\n    return insights;\n}\n// Calculate conversion rate\nfunction calculateConversionRate(streams, listeners) {\n    return listeners > 0 ? Math.round(streams / listeners * 100) / 100 : 0;\n}\n// Get time-based analytics\nfunction getTimeBasedAnalytics(streamData, period) {\n    const periodMap = new Map();\n    streamData.forEach((stream)=>{\n        let periodKey;\n        switch(period){\n            case \"daily\":\n                periodKey = stream.date.toISOString().split(\"T\")[0];\n                break;\n            case \"weekly\":\n                const weekStart = new Date(stream.date);\n                weekStart.setDate(weekStart.getDate() - weekStart.getDay());\n                periodKey = weekStart.toISOString().split(\"T\")[0];\n                break;\n            case \"monthly\":\n                periodKey = stream.date.toISOString().substring(0, 7);\n                break;\n            default:\n                periodKey = stream.date.toISOString().split(\"T\")[0];\n        }\n        const existing = periodMap.get(periodKey) || {\n            streams: 0,\n            revenue: 0\n        };\n        periodMap.set(periodKey, {\n            streams: existing.streams + stream.streams,\n            revenue: existing.revenue + stream.revenue\n        });\n    });\n    return Array.from(periodMap.entries()).map(([period, data])=>({\n            period,\n            ...data\n        })).sort((a, b)=>a.period.localeCompare(b.period));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/analytics-logic.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAuthResponse: () => (/* binding */ createAuthResponse),\n/* harmony export */   extractTokenFromHeader: () => (/* binding */ extractTokenFromHeader),\n/* harmony export */   generateEmailVerificationToken: () => (/* binding */ generateEmailVerificationToken),\n/* harmony export */   generatePasswordResetToken: () => (/* binding */ generatePasswordResetToken),\n/* harmony export */   generateSessionToken: () => (/* binding */ generateSessionToken),\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   isValidEmail: () => (/* binding */ isValidEmail),\n/* harmony export */   isValidPassword: () => (/* binding */ isValidPassword),\n/* harmony export */   isValidUsername: () => (/* binding */ isValidUsername),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst JWT_SECRET = process.env.JWT_SECRET || \"your-super-secret-jwt-key-change-in-production\";\nconst JWT_EXPIRES_IN = \"7d\";\n// Hash password\nasync function hashPassword(password) {\n    const saltRounds = 12;\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hash(password, saltRounds);\n}\n// Verify password\nasync function verifyPassword(password, hashedPassword) {\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compare(password, hashedPassword);\n}\n// Generate JWT token\nfunction generateToken(payload) {\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign(payload, JWT_SECRET, {\n        expiresIn: JWT_EXPIRES_IN\n    });\n}\n// Verify JWT token\nfunction verifyToken(token) {\n    try {\n        return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n    } catch (error) {\n        return undefined;\n    }\n}\n// Generate session token\nfunction generateSessionToken() {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(32).toString(\"hex\");\n}\n// Validate email format\nfunction isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n}\n// Validate password strength\nfunction isValidPassword(password) {\n    if (password.length < 8) {\n        return {\n            valid: false,\n            message: \"Password must be at least 8 characters long\"\n        };\n    }\n    if (!/(?=.*[a-z])/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one lowercase letter\"\n        };\n    }\n    if (!/(?=.*[A-Z])/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one uppercase letter\"\n        };\n    }\n    if (!/(?=.*\\d)/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one number\"\n        };\n    }\n    if (!/(?=.*[@$!%*?&])/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one special character (@$!%*?&)\"\n        };\n    }\n    return {\n        valid: true\n    };\n}\n// Validate username format\nfunction isValidUsername(username) {\n    if (username.length < 3) {\n        return {\n            valid: false,\n            message: \"Username must be at least 3 characters long\"\n        };\n    }\n    if (username.length > 20) {\n        return {\n            valid: false,\n            message: \"Username must be less than 20 characters long\"\n        };\n    }\n    if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n        return {\n            valid: false,\n            message: \"Username can only contain letters, numbers, and underscores\"\n        };\n    }\n    return {\n        valid: true\n    };\n}\n// Generate password reset token\nfunction generatePasswordResetToken() {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(32).toString(\"hex\");\n}\n// Generate email verification token\nfunction generateEmailVerificationToken() {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(32).toString(\"hex\");\n}\n// Extract token from Authorization header\nfunction extractTokenFromHeader(authHeader) {\n    if (!authHeader) return null;\n    const parts = authHeader.split(\" \");\n    if (parts.length !== 2 || parts[0] !== \"Bearer\") return null;\n    return parts[1];\n}\n// Create auth response\nfunction createAuthResponse(user, token) {\n    return {\n        success: true,\n        message: \"Authentication successful\",\n        data: {\n            user: {\n                id: user.id,\n                email: user.email,\n                username: user.username || user.email.split(\"@\")[0],\n                firstName: user.firstName,\n                lastName: user.lastName,\n                avatar: user.avatar,\n                bio: user.bio,\n                website: user.website,\n                location: user.location,\n                role: user.role,\n                isEmailVerified: user.isEmailVerified,\n                createdAt: user.createdAt\n            },\n            token,\n            expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) // 7 days\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFVBQVUsT0FBTztJQUV4RCxPQUFPQSxLQUFLLENBQUMsRUFBRTtBQUNqQjtBQUVBLHVCQUF1QjtBQUNoQixTQUFTRSxtQkFBbUJDLElBQVMsRUFBRXZCLEtBQWE7SUFDekQsT0FBTztRQUNMd0IsU0FBUztRQUNUWCxTQUFTO1FBQ1RZLE1BQU07WUFDSkYsTUFBTTtnQkFDSkcsSUFBSUgsS0FBS0csRUFBRTtnQkFDWG5CLE9BQU9nQixLQUFLaEIsS0FBSztnQkFDakJRLFVBQVVRLEtBQUtSLFFBQVEsSUFBSVEsS0FBS2hCLEtBQUssQ0FBQ2MsS0FBSyxDQUFDLElBQUksQ0FBQyxFQUFFO2dCQUNuRE0sV0FBV0osS0FBS0ksU0FBUztnQkFDekJDLFVBQVVMLEtBQUtLLFFBQVE7Z0JBQ3ZCQyxRQUFRTixLQUFLTSxNQUFNO2dCQUNuQkMsS0FBS1AsS0FBS08sR0FBRztnQkFDYkMsU0FBU1IsS0FBS1EsT0FBTztnQkFDckJDLFVBQVVULEtBQUtTLFFBQVE7Z0JBQ3ZCQyxNQUFNVixLQUFLVSxJQUFJO2dCQUNmQyxpQkFBaUJYLEtBQUtXLGVBQWU7Z0JBQ3JDQyxXQUFXWixLQUFLWSxTQUFTO1lBQzNCO1lBQ0FuQztZQUNBb0MsV0FBVyxJQUFJQyxLQUFLQSxLQUFLQyxHQUFHLEtBQUssSUFBSSxLQUFLLEtBQUssS0FBSyxNQUFNLFNBQVM7UUFDckU7SUFDRjtBQUNGIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va3VzaHR1bmVzLW1vYmlsZS1hcHAvLi9saWIvYXV0aC50cz9iZjdlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiY3J5cHQgZnJvbSAnYmNyeXB0anMnO1xuaW1wb3J0IGp3dCBmcm9tICdqc29ud2VidG9rZW4nO1xuaW1wb3J0IHsgcmFuZG9tQnl0ZXMgfSBmcm9tICdjcnlwdG8nO1xuXG5jb25zdCBKV1RfU0VDUkVUID0gcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCB8fCAneW91ci1zdXBlci1zZWNyZXQtand0LWtleS1jaGFuZ2UtaW4tcHJvZHVjdGlvbic7XG5jb25zdCBKV1RfRVhQSVJFU19JTiA9ICc3ZCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVXNlclBheWxvYWQge1xuICBpZDogc3RyaW5nO1xuICBlbWFpbDogc3RyaW5nO1xuICB1c2VybmFtZTogc3RyaW5nIHwgbnVsbDtcbiAgZmlyc3ROYW1lPzogc3RyaW5nIHwgbnVsbDtcbiAgbGFzdE5hbWU/OiBzdHJpbmcgfCBudWxsO1xuICBiaW8/OiBzdHJpbmcgfCBudWxsO1xuICB3ZWJzaXRlPzogc3RyaW5nIHwgbnVsbDtcbiAgbG9jYXRpb24/OiBzdHJpbmcgfCBudWxsO1xuICBhdmF0YXI/OiBzdHJpbmcgfCBudWxsO1xuICBpc0VtYWlsVmVyaWZpZWQ6IGJvb2xlYW47XG4gIHJvbGU6IHN0cmluZztcbn1cblxuZXhwb3J0IGludGVyZmFjZSBBdXRoVG9rZW4ge1xuICB0b2tlbjogc3RyaW5nO1xuICBleHBpcmVzQXQ6IERhdGU7XG59XG5cbi8vIEhhc2ggcGFzc3dvcmRcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBoYXNoUGFzc3dvcmQocGFzc3dvcmQ6IHN0cmluZyk6IFByb21pc2U8c3RyaW5nPiB7XG4gIGNvbnN0IHNhbHRSb3VuZHMgPSAxMjtcbiAgcmV0dXJuIGF3YWl0IGJjcnlwdC5oYXNoKHBhc3N3b3JkLCBzYWx0Um91bmRzKTtcbn1cblxuLy8gVmVyaWZ5IHBhc3N3b3JkXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gdmVyaWZ5UGFzc3dvcmQocGFzc3dvcmQ6IHN0cmluZywgaGFzaGVkUGFzc3dvcmQ6IHN0cmluZyk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICByZXR1cm4gYXdhaXQgYmNyeXB0LmNvbXBhcmUocGFzc3dvcmQsIGhhc2hlZFBhc3N3b3JkKTtcbn1cblxuLy8gR2VuZXJhdGUgSldUIHRva2VuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVUb2tlbihwYXlsb2FkOiBVc2VyUGF5bG9hZCk6IHN0cmluZyB7XG4gIHJldHVybiBqd3Quc2lnbihwYXlsb2FkLCBKV1RfU0VDUkVULCB7IGV4cGlyZXNJbjogSldUX0VYUElSRVNfSU4gfSk7XG59XG5cbi8vIFZlcmlmeSBKV1QgdG9rZW5cbmV4cG9ydCBmdW5jdGlvbiB2ZXJpZnlUb2tlbih0b2tlbjogc3RyaW5nKTogVXNlclBheWxvYWQgfCB1bmRlZmluZWQge1xuICB0cnkge1xuICAgIHJldHVybiBqd3QudmVyaWZ5KHRva2VuLCBKV1RfU0VDUkVUKSBhcyBVc2VyUGF5bG9hZDtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4gdW5kZWZpbmVkO1xuICB9XG59XG5cbi8vIEdlbmVyYXRlIHNlc3Npb24gdG9rZW5cbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZVNlc3Npb25Ub2tlbigpOiBzdHJpbmcge1xuICByZXR1cm4gcmFuZG9tQnl0ZXMoMzIpLnRvU3RyaW5nKCdoZXgnKTtcbn1cblxuLy8gVmFsaWRhdGUgZW1haWwgZm9ybWF0XG5leHBvcnQgZnVuY3Rpb24gaXNWYWxpZEVtYWlsKGVtYWlsOiBzdHJpbmcpOiBib29sZWFuIHtcbiAgY29uc3QgZW1haWxSZWdleCA9IC9eW15cXHNAXStAW15cXHNAXStcXC5bXlxcc0BdKyQvO1xuICByZXR1cm4gZW1haWxSZWdleC50ZXN0KGVtYWlsKTtcbn1cblxuLy8gVmFsaWRhdGUgcGFzc3dvcmQgc3RyZW5ndGhcbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkUGFzc3dvcmQocGFzc3dvcmQ6IHN0cmluZyk6IHsgdmFsaWQ6IGJvb2xlYW47IG1lc3NhZ2U/OiBzdHJpbmcgfSB7XG4gIGlmIChwYXNzd29yZC5sZW5ndGggPCA4KSB7XG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBtZXNzYWdlOiAnUGFzc3dvcmQgbXVzdCBiZSBhdCBsZWFzdCA4IGNoYXJhY3RlcnMgbG9uZycgfTtcbiAgfVxuICBcbiAgaWYgKCEvKD89LipbYS16XSkvLnRlc3QocGFzc3dvcmQpKSB7XG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBtZXNzYWdlOiAnUGFzc3dvcmQgbXVzdCBjb250YWluIGF0IGxlYXN0IG9uZSBsb3dlcmNhc2UgbGV0dGVyJyB9O1xuICB9XG4gIFxuICBpZiAoIS8oPz0uKltBLVpdKS8udGVzdChwYXNzd29yZCkpIHtcbiAgICByZXR1cm4geyB2YWxpZDogZmFsc2UsIG1lc3NhZ2U6ICdQYXNzd29yZCBtdXN0IGNvbnRhaW4gYXQgbGVhc3Qgb25lIHVwcGVyY2FzZSBsZXR0ZXInIH07XG4gIH1cbiAgXG4gIGlmICghLyg/PS4qXFxkKS8udGVzdChwYXNzd29yZCkpIHtcbiAgICByZXR1cm4geyB2YWxpZDogZmFsc2UsIG1lc3NhZ2U6ICdQYXNzd29yZCBtdXN0IGNvbnRhaW4gYXQgbGVhc3Qgb25lIG51bWJlcicgfTtcbiAgfVxuICBcbiAgaWYgKCEvKD89LipbQCQhJSo/Jl0pLy50ZXN0KHBhc3N3b3JkKSkge1xuICAgIHJldHVybiB7IHZhbGlkOiBmYWxzZSwgbWVzc2FnZTogJ1Bhc3N3b3JkIG11c3QgY29udGFpbiBhdCBsZWFzdCBvbmUgc3BlY2lhbCBjaGFyYWN0ZXIgKEAkISUqPyYpJyB9O1xuICB9XG4gIFxuICByZXR1cm4geyB2YWxpZDogdHJ1ZSB9O1xufVxuXG4vLyBWYWxpZGF0ZSB1c2VybmFtZSBmb3JtYXRcbmV4cG9ydCBmdW5jdGlvbiBpc1ZhbGlkVXNlcm5hbWUodXNlcm5hbWU6IHN0cmluZyk6IHsgdmFsaWQ6IGJvb2xlYW47IG1lc3NhZ2U/OiBzdHJpbmcgfSB7XG4gIGlmICh1c2VybmFtZS5sZW5ndGggPCAzKSB7XG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBtZXNzYWdlOiAnVXNlcm5hbWUgbXVzdCBiZSBhdCBsZWFzdCAzIGNoYXJhY3RlcnMgbG9uZycgfTtcbiAgfVxuICBcbiAgaWYgKHVzZXJuYW1lLmxlbmd0aCA+IDIwKSB7XG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBtZXNzYWdlOiAnVXNlcm5hbWUgbXVzdCBiZSBsZXNzIHRoYW4gMjAgY2hhcmFjdGVycyBsb25nJyB9O1xuICB9XG4gIFxuICBpZiAoIS9eW2EtekEtWjAtOV9dKyQvLnRlc3QodXNlcm5hbWUpKSB7XG4gICAgcmV0dXJuIHsgdmFsaWQ6IGZhbHNlLCBtZXNzYWdlOiAnVXNlcm5hbWUgY2FuIG9ubHkgY29udGFpbiBsZXR0ZXJzLCBudW1iZXJzLCBhbmQgdW5kZXJzY29yZXMnIH07XG4gIH1cbiAgXG4gIHJldHVybiB7IHZhbGlkOiB0cnVlIH07XG59XG5cbi8vIEdlbmVyYXRlIHBhc3N3b3JkIHJlc2V0IHRva2VuXG5leHBvcnQgZnVuY3Rpb24gZ2VuZXJhdGVQYXNzd29yZFJlc2V0VG9rZW4oKTogc3RyaW5nIHtcbiAgcmV0dXJuIHJhbmRvbUJ5dGVzKDMyKS50b1N0cmluZygnaGV4Jyk7XG59XG5cbi8vIEdlbmVyYXRlIGVtYWlsIHZlcmlmaWNhdGlvbiB0b2tlblxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlRW1haWxWZXJpZmljYXRpb25Ub2tlbigpOiBzdHJpbmcge1xuICByZXR1cm4gcmFuZG9tQnl0ZXMoMzIpLnRvU3RyaW5nKCdoZXgnKTtcbn1cblxuLy8gRXh0cmFjdCB0b2tlbiBmcm9tIEF1dGhvcml6YXRpb24gaGVhZGVyXG5leHBvcnQgZnVuY3Rpb24gZXh0cmFjdFRva2VuRnJvbUhlYWRlcihhdXRoSGVhZGVyOiBzdHJpbmcgfCBudWxsKTogc3RyaW5nIHwgbnVsbCB7XG4gIGlmICghYXV0aEhlYWRlcikgcmV0dXJuIG51bGw7XG4gIFxuICBjb25zdCBwYXJ0cyA9IGF1dGhIZWFkZXIuc3BsaXQoJyAnKTtcbiAgaWYgKHBhcnRzLmxlbmd0aCAhPT0gMiB8fCBwYXJ0c1swXSAhPT0gJ0JlYXJlcicpIHJldHVybiBudWxsO1xuICBcbiAgcmV0dXJuIHBhcnRzWzFdO1xufVxuXG4vLyBDcmVhdGUgYXV0aCByZXNwb25zZVxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUF1dGhSZXNwb25zZSh1c2VyOiBhbnksIHRva2VuOiBzdHJpbmcpIHtcbiAgcmV0dXJuIHtcbiAgICBzdWNjZXNzOiB0cnVlLFxuICAgIG1lc3NhZ2U6ICdBdXRoZW50aWNhdGlvbiBzdWNjZXNzZnVsJyxcbiAgICBkYXRhOiB7XG4gICAgICB1c2VyOiB7XG4gICAgICAgIGlkOiB1c2VyLmlkLFxuICAgICAgICBlbWFpbDogdXNlci5lbWFpbCxcbiAgICAgICAgdXNlcm5hbWU6IHVzZXIudXNlcm5hbWUgfHwgdXNlci5lbWFpbC5zcGxpdCgnQCcpWzBdLFxuICAgICAgICBmaXJzdE5hbWU6IHVzZXIuZmlyc3ROYW1lLFxuICAgICAgICBsYXN0TmFtZTogdXNlci5sYXN0TmFtZSxcbiAgICAgICAgYXZhdGFyOiB1c2VyLmF2YXRhcixcbiAgICAgICAgYmlvOiB1c2VyLmJpbyxcbiAgICAgICAgd2Vic2l0ZTogdXNlci53ZWJzaXRlLFxuICAgICAgICBsb2NhdGlvbjogdXNlci5sb2NhdGlvbixcbiAgICAgICAgcm9sZTogdXNlci5yb2xlLFxuICAgICAgICBpc0VtYWlsVmVyaWZpZWQ6IHVzZXIuaXNFbWFpbFZlcmlmaWVkLFxuICAgICAgICBjcmVhdGVkQXQ6IHVzZXIuY3JlYXRlZEF0XG4gICAgICB9LFxuICAgICAgdG9rZW4sXG4gICAgICBleHBpcmVzQXQ6IG5ldyBEYXRlKERhdGUubm93KCkgKyA3ICogMjQgKiA2MCAqIDYwICogMTAwMCkgLy8gNyBkYXlzXG4gICAgfVxuICB9O1xufVxuIl0sIm5hbWVzIjpbImJjcnlwdCIsImp3dCIsInJhbmRvbUJ5dGVzIiwiSldUX1NFQ1JFVCIsInByb2Nlc3MiLCJlbnYiLCJKV1RfRVhQSVJFU19JTiIsImhhc2hQYXNzd29yZCIsInBhc3N3b3JkIiwic2FsdFJvdW5kcyIsImhhc2giLCJ2ZXJpZnlQYXNzd29yZCIsImhhc2hlZFBhc3N3b3JkIiwiY29tcGFyZSIsImdlbmVyYXRlVG9rZW4iLCJwYXlsb2FkIiwic2lnbiIsImV4cGlyZXNJbiIsInZlcmlmeVRva2VuIiwidG9rZW4iLCJ2ZXJpZnkiLCJlcnJvciIsInVuZGVmaW5lZCIsImdlbmVyYXRlU2Vzc2lvblRva2VuIiwidG9TdHJpbmciLCJpc1ZhbGlkRW1haWwiLCJlbWFpbCIsImVtYWlsUmVnZXgiLCJ0ZXN0IiwiaXNWYWxpZFBhc3N3b3JkIiwibGVuZ3RoIiwidmFsaWQiLCJtZXNzYWdlIiwiaXNWYWxpZFVzZXJuYW1lIiwidXNlcm5hbWUiLCJnZW5lcmF0ZVBhc3N3b3JkUmVzZXRUb2tlbiIsImdlbmVyYXRlRW1haWxWZXJpZmljYXRpb25Ub2tlbiIsImV4dHJhY3RUb2tlbkZyb21IZWFkZXIiLCJhdXRoSGVhZGVyIiwicGFydHMiLCJzcGxpdCIsImNyZWF0ZUF1dGhSZXNwb25zZSIsInVzZXIiLCJzdWNjZXNzIiwiZGF0YSIsImlkIiwiZmlyc3ROYW1lIiwibGFzdE5hbWUiLCJhdmF0YXIiLCJiaW8iLCJ3ZWJzaXRlIiwibG9jYXRpb24iLCJyb2xlIiwiaXNFbWFpbFZlcmlmaWVkIiwiY3JlYXRlZEF0IiwiZXhwaXJlc0F0IiwiRGF0ZSIsIm5vdyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/semver","vendor-chunks/prisma","vendor-chunks/bcryptjs","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/jwa","vendor-chunks/lodash.once","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time","vendor-chunks/@prisma"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fanalytics%2Froute&page=%2Fapi%2Fanalytics%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fanalytics%2Froute.ts&appDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();