"use strict";(()=>{var e={};e.id=517,e.ids=[517],e.modules={3524:e=>{e.exports=require("@prisma/client")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6693:(e,s,a)=>{a.r(s),a.d(s,{headerHooks:()=>p,originalPathname:()=>g,requestAsyncStorage:()=>l,routeModule:()=>c,serverHooks:()=>d,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>h});var r={};a.r(r),a.d(r,{GET:()=>GET});var t=a(884),n=a(6132),u=a(5798),i=a(3524);let o=new i.PrismaClient;async function GET(e){try{let{searchParams:s}=new URL(e.url),a=s.get("username");if(!a)return u.Z.json({success:!1,message:"Username is required"},{status:400});if(a.length<3||a.length>20)return u.Z.json({success:!0,available:!1,message:"Username must be 3-20 characters long"});if(!/^[a-zA-Z0-9_]+$/.test(a))return u.Z.json({success:!0,available:!1,message:"Username can only contain letters, numbers, and underscores"});let r=await o.user.findUnique({where:{username:a.toLowerCase()},select:{id:!0}});return u.Z.json({success:!0,available:!r,message:r?"Username is already taken":"Username is available"})}catch(e){return console.error("Username check error:",e),u.Z.json({success:!1,message:"Failed to check username availability"},{status:500})}}let c=new t.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/auth/check-username/route",pathname:"/api/auth/check-username",filename:"route",bundlePath:"app/api/auth/check-username/route"},resolvedPagePath:"/Users/wizloxssd/Downloads/kushtunes-starter/app/api/auth/check-username/route.ts",nextConfigOutput:"",userland:r}),{requestAsyncStorage:l,staticGenerationAsyncStorage:m,serverHooks:d,headerHooks:p,staticGenerationBailout:h}=c,g="/api/auth/check-username/route"}};var s=require("../../../../webpack-runtime.js");s.C(e);var __webpack_exec__=e=>s(s.s=e),a=s.X(0,[729,798],()=>__webpack_exec__(6693));module.exports=a})();