"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/upload/route";
exports.ids = ["app/api/upload/route"];
exports.modules = {

/***/ "@prisma/client/runtime/library.js":
/*!****************************************************!*\
  !*** external "@prisma/client/runtime/library.js" ***!
  \****************************************************/
/***/ ((module) => {

module.exports = require("@prisma/client/runtime/library.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "sharp":
/*!************************!*\
  !*** external "sharp" ***!
  \************************/
/***/ ((module) => {

module.exports = require("sharp");

/***/ }),

/***/ "buffer":
/*!*************************!*\
  !*** external "buffer" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("buffer");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "fs/promises":
/*!******************************!*\
  !*** external "fs/promises" ***!
  \******************************/
/***/ ((module) => {

module.exports = require("fs/promises");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "stream":
/*!*************************!*\
  !*** external "stream" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("stream");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   headerHooks: () => (/* binding */ headerHooks),\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage),\n/* harmony export */   staticGenerationBailout: () => (/* binding */ staticGenerationBailout)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var _Users_wizloxssd_Downloads_kushtunes_starter_app_api_upload_route_ts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app/api/upload/route.ts */ \"(rsc)/./app/api/upload/route.ts\");\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/upload/route\",\n        pathname: \"/api/upload\",\n        filename: \"route\",\n        bundlePath: \"app/api/upload/route\"\n    },\n    resolvedPagePath: \"/Users/wizloxssd/Downloads/kushtunes-starter/app/api/upload/route.ts\",\n    nextConfigOutput,\n    userland: _Users_wizloxssd_Downloads_kushtunes_starter_app_api_upload_route_ts__WEBPACK_IMPORTED_MODULE_2__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks, headerHooks, staticGenerationBailout } = routeModule;\nconst originalPathname = \"/api/upload/route\";\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ1cGxvYWQlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnVwbG9hZCUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnVwbG9hZCUyRnJvdXRlLnRzJmFwcERpcj0lMkZVc2VycyUyRndpemxveHNzZCUyRkRvd25sb2FkcyUyRmt1c2h0dW5lcy1zdGFydGVyJTJGYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj0lMkZVc2VycyUyRndpemxveHNzZCUyRkRvd25sb2FkcyUyRmt1c2h0dW5lcy1zdGFydGVyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFzRztBQUN2QztBQUNrQztBQUNqRztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLHVHQUF1RztBQUMvRztBQUNpSjs7QUFFakoiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9rdXNodHVuZXMtbW9iaWxlLWFwcC8/MWJkOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBcHBSb3V0ZVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLW1vZHVsZXMvYXBwLXJvdXRlL21vZHVsZS5jb21waWxlZFwiO1xuaW1wb3J0IHsgUm91dGVLaW5kIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvZnV0dXJlL3JvdXRlLWtpbmRcIjtcbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIvVXNlcnMvd2l6bG94c3NkL0Rvd25sb2Fkcy9rdXNodHVuZXMtc3RhcnRlci9hcHAvYXBpL3VwbG9hZC9yb3V0ZS50c1wiO1xuLy8gV2UgaW5qZWN0IHRoZSBuZXh0Q29uZmlnT3V0cHV0IGhlcmUgc28gdGhhdCB3ZSBjYW4gdXNlIHRoZW0gaW4gdGhlIHJvdXRlXG4vLyBtb2R1bGUuXG5jb25zdCBuZXh0Q29uZmlnT3V0cHV0ID0gXCJcIlxuY29uc3Qgcm91dGVNb2R1bGUgPSBuZXcgQXBwUm91dGVSb3V0ZU1vZHVsZSh7XG4gICAgZGVmaW5pdGlvbjoge1xuICAgICAgICBraW5kOiBSb3V0ZUtpbmQuQVBQX1JPVVRFLFxuICAgICAgICBwYWdlOiBcIi9hcGkvdXBsb2FkL3JvdXRlXCIsXG4gICAgICAgIHBhdGhuYW1lOiBcIi9hcGkvdXBsb2FkXCIsXG4gICAgICAgIGZpbGVuYW1lOiBcInJvdXRlXCIsXG4gICAgICAgIGJ1bmRsZVBhdGg6IFwiYXBwL2FwaS91cGxvYWQvcm91dGVcIlxuICAgIH0sXG4gICAgcmVzb2x2ZWRQYWdlUGF0aDogXCIvVXNlcnMvd2l6bG94c3NkL0Rvd25sb2Fkcy9rdXNodHVuZXMtc3RhcnRlci9hcHAvYXBpL3VwbG9hZC9yb3V0ZS50c1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzLCBoZWFkZXJIb29rcywgc3RhdGljR2VuZXJhdGlvbkJhaWxvdXQgfSA9IHJvdXRlTW9kdWxlO1xuY29uc3Qgb3JpZ2luYWxQYXRobmFtZSA9IFwiL2FwaS91cGxvYWQvcm91dGVcIjtcbmV4cG9ydCB7IHJvdXRlTW9kdWxlLCByZXF1ZXN0QXN5bmNTdG9yYWdlLCBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlLCBzZXJ2ZXJIb29rcywgaGVhZGVySG9va3MsIHN0YXRpY0dlbmVyYXRpb25CYWlsb3V0LCBvcmlnaW5hbFBhdGhuYW1lLCAgfTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9YXBwLXJvdXRlLmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/upload/route.ts":
/*!*********************************!*\
  !*** ./app/api/upload/route.ts ***!
  \*********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/web/exports/next-response */ \"(rsc)/./node_modules/next/dist/server/web/exports/next-response.js\");\n/* harmony import */ var _barrel_optimize_names_PrismaClient_prisma_client__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! __barrel_optimize__?names=PrismaClient!=!@prisma/client */ \"(rsc)/./node_modules/@prisma/client/default.js\");\n/* harmony import */ var _barrel_optimize_names_PrismaClient_prisma_client__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_barrel_optimize_names_PrismaClient_prisma_client__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! sharp */ \"sharp\");\n/* harmony import */ var sharp__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(sharp__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _lib_upload_logic__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @/lib/upload-logic */ \"(rsc)/./lib/upload-logic.ts\");\n/* harmony import */ var _lib_release_logic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @/lib/release-logic */ \"(rsc)/./lib/release-logic.ts\");\n/* harmony import */ var _lib_auth__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @/lib/auth */ \"(rsc)/./lib/auth.ts\");\n\n\n\n\n\n\nconst prisma = new _barrel_optimize_names_PrismaClient_prisma_client__WEBPACK_IMPORTED_MODULE_5__.PrismaClient();\n// Optimize image - Standard cover art dimensions\nasync function optimizeImage(buffer) {\n    return await sharp__WEBPACK_IMPORTED_MODULE_1___default()(buffer).resize(3000, 3000, {\n        fit: \"cover\",\n        withoutEnlargement: true\n    }).jpeg({\n        quality: 85,\n        progressive: true,\n        mozjpeg: true // Better compression\n    }).toBuffer();\n}\nasync function POST(request) {\n    try {\n        // Extract and verify authentication token\n        const authHeader = request.headers.get(\"authorization\");\n        const token = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.extractTokenFromHeader)(authHeader);\n        if (!token) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: \"Authentication required\"\n            }, {\n                status: 401\n            });\n        }\n        const user = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.verifyToken)(token);\n        if (!user) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: \"Invalid authentication token\"\n            }, {\n                status: 401\n            });\n        }\n        const formData = await request.formData();\n        // Extract track data\n        const tracks = [];\n        let trackIndex = 0;\n        while(formData.has(`track_${trackIndex}`)){\n            const audioFile = formData.get(`track_${trackIndex}`);\n            const title = formData.get(`track_${trackIndex}_title`);\n            if (audioFile && title) {\n                tracks.push({\n                    title,\n                    audioFile\n                });\n            }\n            trackIndex++;\n        }\n        // Extract metadata\n        const metadata = {\n            title: formData.get(\"title\"),\n            artist: formData.get(\"artist\"),\n            releaseDate: formData.get(\"releaseDate\"),\n            genre: formData.get(\"genre\"),\n            language: formData.get(\"language\"),\n            type: formData.get(\"type\") || \"SINGLE\"\n        };\n        const artworkFile = formData.get(\"artwork\");\n        // Validate required fields\n        if (!tracks.length || !metadata.title || !metadata.artist || !artworkFile) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: \"Missing required fields\"\n            }, {\n                status: 400\n            });\n        }\n        // Validate release metadata\n        const metadataValidation = (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.validateReleaseMetadata)(metadata);\n        if (!metadataValidation.valid) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: metadataValidation.errors.join(\", \")\n            }, {\n                status: 400\n            });\n        }\n        // Validate all audio files\n        const audioValidations = tracks.map((track)=>(0,_lib_upload_logic__WEBPACK_IMPORTED_MODULE_2__.validateAudioFile)(track.audioFile));\n        const invalidAudio = audioValidations.find((v)=>!v.valid);\n        if (invalidAudio) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: invalidAudio.error\n            }, {\n                status: 400\n            });\n        }\n        // Validate artwork file\n        const imageValidation = (0,_lib_upload_logic__WEBPACK_IMPORTED_MODULE_2__.validateImageFile)(artworkFile);\n        if (!imageValidation.valid) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: imageValidation.error\n            }, {\n                status: 400\n            });\n        }\n        // Generate unique IDs\n        const releaseId = (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.generateReleaseId)();\n        const upc = (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.generateUPC)();\n        const tempFilePaths = [];\n        try {\n            // Process and save artwork\n            const artworkBuffer = Buffer.from(await artworkFile.arrayBuffer());\n            const optimizedImage = await optimizeImage(artworkBuffer);\n            const artworkFileId = (0,_lib_upload_logic__WEBPACK_IMPORTED_MODULE_2__.generateFileId)();\n            const artworkFilename = (0,_lib_upload_logic__WEBPACK_IMPORTED_MODULE_2__.generateSafeFilename)(artworkFile.name, artworkFileId);\n            // Save artwork (in production, upload to cloud storage)\n            const artworkPath = `/uploads/${user.id}/images/${artworkFilename}`;\n            tempFilePaths.push(artworkPath);\n            // Process artwork metadata\n            const artworkMetadata = await (0,_lib_upload_logic__WEBPACK_IMPORTED_MODULE_2__.processImageMetadata)(artworkPath);\n            // Create release in database\n            const release = await prisma.release.create({\n                data: {\n                    id: releaseId,\n                    primaryArtistId: user.id,\n                    title: metadata.title,\n                    releaseDate: new Date(metadata.releaseDate),\n                    status: \"DRAFT\",\n                    coverUrl: `https://kushtunes-storage.com/artwork/${artworkFileId}.jpg`,\n                    genre: metadata.genre,\n                    territories: JSON.stringify([\n                        \"US\"\n                    ]),\n                    upc: upc,\n                    language: metadata.language,\n                    releaseType: metadata.type\n                }\n            });\n            // Process and save tracks\n            const trackRecords = [];\n            for(let i = 0; i < tracks.length; i++){\n                const track = tracks[i];\n                const trackId = (0,_lib_upload_logic__WEBPACK_IMPORTED_MODULE_2__.generateFileId)();\n                const isrc = (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.generateISRC)();\n                // Save audio file (in production, upload to cloud storage)\n                const audioPath = `/uploads/${user.id}/audio/${(0,_lib_upload_logic__WEBPACK_IMPORTED_MODULE_2__.generateSafeFilename)(track.audioFile.name, trackId)}`;\n                tempFilePaths.push(audioPath);\n                // Process audio metadata\n                const audioMetadata = await (0,_lib_upload_logic__WEBPACK_IMPORTED_MODULE_2__.processAudioMetadata)(audioPath);\n                // Create track record\n                const trackRecord = await prisma.track.create({\n                    data: {\n                        id: trackId,\n                        releaseId,\n                        title: track.title,\n                        trackNumber: i + 1,\n                        isrc,\n                        audioUrl: `https://kushtunes-storage.com/audio/${trackId}.${track.audioFile.name.split(\".\").pop()}`,\n                        duration: audioMetadata.duration || 180,\n                        language: metadata.language,\n                        bitrate: audioMetadata.bitrate,\n                        sampleRate: audioMetadata.sampleRate,\n                        channels: audioMetadata.channels\n                    }\n                });\n                trackRecords.push(trackRecord);\n            }\n            // Calculate release duration\n            const totalDuration = (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.calculateReleaseDuration)(trackRecords.map((t)=>({\n                    duration: t.duration\n                })));\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: true,\n                message: \"Release uploaded successfully\",\n                data: {\n                    releaseId: release.id,\n                    title: release.title,\n                    status: release.status,\n                    coverUrl: release.coverUrl,\n                    upc: release.upc,\n                    uploadedAt: release.createdAt,\n                    tracks: trackRecords.map((track)=>({\n                            id: track.id,\n                            title: track.title,\n                            trackNumber: track.trackNumber,\n                            duration: (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.formatDuration)(track.duration),\n                            isrc: track.isrc\n                        })),\n                    summary: {\n                        trackCount: trackRecords.length,\n                        totalDuration: (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.formatDuration)(totalDuration),\n                        releaseType: metadata.type\n                    },\n                    fileInfo: {\n                        audioFiles: tracks.map((t)=>({\n                                name: t.audioFile.name,\n                                size: t.audioFile.size,\n                                type: t.audioFile.type\n                            })),\n                        artwork: {\n                            name: artworkFile.name,\n                            size: optimizedImage.length,\n                            type: \"image/jpeg\",\n                            dimensions: `${artworkMetadata.width}x${artworkMetadata.height}`\n                        }\n                    }\n                }\n            });\n        } catch (error) {\n            // Clean up temporary files on error\n            await (0,_lib_upload_logic__WEBPACK_IMPORTED_MODULE_2__.cleanupTempFiles)(tempFilePaths);\n            throw error;\n        }\n    } catch (error) {\n        console.error(\"Upload error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            message: \"Upload failed. Please try again.\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function GET(request) {\n    try {\n        // Extract and verify authentication token\n        const authHeader = request.headers.get(\"authorization\");\n        const token = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.extractTokenFromHeader)(authHeader);\n        if (!token) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: \"Authentication required\"\n            }, {\n                status: 401\n            });\n        }\n        const user = (0,_lib_auth__WEBPACK_IMPORTED_MODULE_4__.verifyToken)(token);\n        if (!user) {\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: false,\n                message: \"Invalid authentication token\"\n            }, {\n                status: 401\n            });\n        }\n        const { searchParams } = new URL(request.url);\n        const releaseId = searchParams.get(\"releaseId\");\n        if (releaseId) {\n            // Get specific release for authenticated user\n            const release = await prisma.release.findFirst({\n                where: {\n                    id: releaseId,\n                    primaryArtistId: user.id\n                },\n                include: {\n                    tracks: {\n                        orderBy: {\n                            trackNumber: \"asc\"\n                        }\n                    },\n                    deliveries: true\n                }\n            });\n            if (!release) {\n                return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                    success: false,\n                    message: \"Release not found\"\n                }, {\n                    status: 404\n                });\n            }\n            // Calculate release analytics\n            const totalDuration = (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.calculateReleaseDuration)(release.tracks.map((t)=>({\n                    duration: t.duration\n                })));\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: true,\n                data: {\n                    ...release,\n                    summary: {\n                        trackCount: release.tracks.length,\n                        totalDuration: (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.formatDuration)(totalDuration),\n                        releaseType: release.releaseType || \"SINGLE\"\n                    },\n                    tracks: release.tracks.map((track)=>({\n                            ...track,\n                            duration: (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.formatDuration)(track.duration)\n                        }))\n                }\n            });\n        } else {\n            // Get all releases for authenticated user\n            const releases = await prisma.release.findMany({\n                where: {\n                    primaryArtistId: user.id\n                },\n                include: {\n                    tracks: {\n                        orderBy: {\n                            trackNumber: \"asc\"\n                        }\n                    },\n                    deliveries: true\n                },\n                orderBy: {\n                    createdAt: \"desc\"\n                }\n            });\n            // Add summary data to each release\n            const releasesWithSummary = releases.map((release)=>{\n                const totalDuration = (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.calculateReleaseDuration)(release.tracks.map((t)=>({\n                        duration: t.duration\n                    })));\n                return {\n                    ...release,\n                    summary: {\n                        trackCount: release.tracks.length,\n                        totalDuration: (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.formatDuration)(totalDuration),\n                        releaseType: release.releaseType || \"SINGLE\"\n                    },\n                    tracks: release.tracks.map((track)=>({\n                            ...track,\n                            duration: (0,_lib_release_logic__WEBPACK_IMPORTED_MODULE_3__.formatDuration)(track.duration)\n                        }))\n                };\n            });\n            return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n                success: true,\n                data: releasesWithSummary,\n                count: releases.length\n            });\n        }\n    } catch (error) {\n        console.error(\"Release fetch error:\", error);\n        return next_dist_server_web_exports_next_response__WEBPACK_IMPORTED_MODULE_0__[\"default\"].json({\n            success: false,\n            message: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./app/api/upload/route.ts\n");

/***/ }),

/***/ "(rsc)/./lib/auth.ts":
/*!*********************!*\
  !*** ./lib/auth.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAuthResponse: () => (/* binding */ createAuthResponse),\n/* harmony export */   extractTokenFromHeader: () => (/* binding */ extractTokenFromHeader),\n/* harmony export */   generateEmailVerificationToken: () => (/* binding */ generateEmailVerificationToken),\n/* harmony export */   generatePasswordResetToken: () => (/* binding */ generatePasswordResetToken),\n/* harmony export */   generateSessionToken: () => (/* binding */ generateSessionToken),\n/* harmony export */   generateToken: () => (/* binding */ generateToken),\n/* harmony export */   hashPassword: () => (/* binding */ hashPassword),\n/* harmony export */   isValidEmail: () => (/* binding */ isValidEmail),\n/* harmony export */   isValidPassword: () => (/* binding */ isValidPassword),\n/* harmony export */   isValidUsername: () => (/* binding */ isValidUsername),\n/* harmony export */   verifyPassword: () => (/* binding */ verifyPassword),\n/* harmony export */   verifyToken: () => (/* binding */ verifyToken)\n/* harmony export */ });\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jsonwebtoken */ \"(rsc)/./node_modules/jsonwebtoken/index.js\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_2__);\n\n\n\nconst JWT_SECRET = process.env.JWT_SECRET || \"your-super-secret-jwt-key-change-in-production\";\nconst JWT_EXPIRES_IN = \"7d\";\n// Hash password\nasync function hashPassword(password) {\n    const saltRounds = 12;\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].hash(password, saltRounds);\n}\n// Verify password\nasync function verifyPassword(password, hashedPassword) {\n    return await bcryptjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].compare(password, hashedPassword);\n}\n// Generate JWT token\nfunction generateToken(payload) {\n    return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().sign(payload, JWT_SECRET, {\n        expiresIn: JWT_EXPIRES_IN\n    });\n}\n// Verify JWT token\nfunction verifyToken(token) {\n    try {\n        return jsonwebtoken__WEBPACK_IMPORTED_MODULE_1___default().verify(token, JWT_SECRET);\n    } catch (error) {\n        return undefined;\n    }\n}\n// Generate session token\nfunction generateSessionToken() {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(32).toString(\"hex\");\n}\n// Validate email format\nfunction isValidEmail(email) {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n}\n// Validate password strength\nfunction isValidPassword(password) {\n    if (password.length < 8) {\n        return {\n            valid: false,\n            message: \"Password must be at least 8 characters long\"\n        };\n    }\n    if (!/(?=.*[a-z])/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one lowercase letter\"\n        };\n    }\n    if (!/(?=.*[A-Z])/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one uppercase letter\"\n        };\n    }\n    if (!/(?=.*\\d)/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one number\"\n        };\n    }\n    if (!/(?=.*[@$!%*?&])/.test(password)) {\n        return {\n            valid: false,\n            message: \"Password must contain at least one special character (@$!%*?&)\"\n        };\n    }\n    return {\n        valid: true\n    };\n}\n// Validate username format\nfunction isValidUsername(username) {\n    if (username.length < 3) {\n        return {\n            valid: false,\n            message: \"Username must be at least 3 characters long\"\n        };\n    }\n    if (username.length > 20) {\n        return {\n            valid: false,\n            message: \"Username must be less than 20 characters long\"\n        };\n    }\n    if (!/^[a-zA-Z0-9_]+$/.test(username)) {\n        return {\n            valid: false,\n            message: \"Username can only contain letters, numbers, and underscores\"\n        };\n    }\n    return {\n        valid: true\n    };\n}\n// Generate password reset token\nfunction generatePasswordResetToken() {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(32).toString(\"hex\");\n}\n// Generate email verification token\nfunction generateEmailVerificationToken() {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_2__.randomBytes)(32).toString(\"hex\");\n}\n// Extract token from Authorization header\nfunction extractTokenFromHeader(authHeader) {\n    if (!authHeader) return null;\n    const parts = authHeader.split(\" \");\n    if (parts.length !== 2 || parts[0] !== \"Bearer\") return null;\n    return parts[1];\n}\n// Create auth response\nfunction createAuthResponse(user, token) {\n    return {\n        success: true,\n        message: \"Authentication successful\",\n        data: {\n            user: {\n                id: user.id,\n                email: user.email,\n                username: user.username || user.email.split(\"@\")[0],\n                firstName: user.firstName,\n                lastName: user.lastName,\n                avatar: user.avatar,\n                bio: user.bio,\n                website: user.website,\n                location: user.location,\n                role: user.role,\n                isEmailVerified: user.isEmailVerified,\n                createdAt: user.createdAt\n            },\n            token,\n            expiresAt: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000) // 7 days\n        }\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/auth.ts\n");

/***/ }),

/***/ "(rsc)/./lib/release-logic.ts":
/*!******************************!*\
  !*** ./lib/release-logic.ts ***!
  \******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateDistributionProgress: () => (/* binding */ calculateDistributionProgress),\n/* harmony export */   calculateReleaseDuration: () => (/* binding */ calculateReleaseDuration),\n/* harmony export */   canDeleteRelease: () => (/* binding */ canDeleteRelease),\n/* harmony export */   canEditRelease: () => (/* binding */ canEditRelease),\n/* harmony export */   formatDuration: () => (/* binding */ formatDuration),\n/* harmony export */   generateISRC: () => (/* binding */ generateISRC),\n/* harmony export */   generateReleaseFilename: () => (/* binding */ generateReleaseFilename),\n/* harmony export */   generateReleaseId: () => (/* binding */ generateReleaseId),\n/* harmony export */   generateReleaseSummary: () => (/* binding */ generateReleaseSummary),\n/* harmony export */   generateUPC: () => (/* binding */ generateUPC),\n/* harmony export */   getReleaseStatusColor: () => (/* binding */ getReleaseStatusColor),\n/* harmony export */   getReleaseStatusText: () => (/* binding */ getReleaseStatusText),\n/* harmony export */   getReleaseTypeDisplayName: () => (/* binding */ getReleaseTypeDisplayName),\n/* harmony export */   validateReleaseDate: () => (/* binding */ validateReleaseDate),\n/* harmony export */   validateReleaseForDistribution: () => (/* binding */ validateReleaseForDistribution),\n/* harmony export */   validateReleaseMetadata: () => (/* binding */ validateReleaseMetadata),\n/* harmony export */   validateTrack: () => (/* binding */ validateTrack)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n\n// Generate release ID\nfunction generateReleaseId() {\n    return \"REL_\" + (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(8).toString(\"hex\").toUpperCase();\n}\n// Generate UPC (Universal Product Code)\nfunction generateUPC() {\n    // Generate a 12-digit UPC\n    const upc = Math.floor(Math.random() * 1000000000000).toString().padStart(12, \"0\");\n    return upc;\n}\n// Generate ISRC (International Standard Recording Code)\nfunction generateISRC(countryCode = \"US\") {\n    const year = new Date().getFullYear().toString().slice(-2);\n    const registrant = (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(3).toString(\"hex\").toUpperCase();\n    const designation = (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(3).toString(\"hex\").toUpperCase();\n    return `${countryCode}${year}${registrant}${designation}`;\n}\n// Validate release metadata\nfunction validateReleaseMetadata(metadata) {\n    const errors = [];\n    if (!metadata.title || metadata.title.trim().length < 1) {\n        errors.push(\"Release title is required\");\n    }\n    if (!metadata.artist || metadata.artist.trim().length < 1) {\n        errors.push(\"Artist name is required\");\n    }\n    if (!metadata.releaseDate) {\n        errors.push(\"Release date is required\");\n    } else {\n        const releaseDate = new Date(metadata.releaseDate);\n        const today = new Date();\n        today.setHours(0, 0, 0, 0);\n        if (releaseDate < today) {\n            errors.push(\"Release date cannot be in the past\");\n        }\n    }\n    if (!metadata.genre) {\n        errors.push(\"Genre is required\");\n    }\n    if (!metadata.language) {\n        errors.push(\"Language is required\");\n    }\n    if (![\n        \"SINGLE\",\n        \"EP\",\n        \"ALBUM\"\n    ].includes(metadata.type)) {\n        errors.push(\"Invalid release type\");\n    }\n    return {\n        valid: errors.length === 0,\n        errors\n    };\n}\n// Validate track data\nfunction validateTrack(track) {\n    const errors = [];\n    if (!track.title || track.title.trim().length < 1) {\n        errors.push(\"Track title is required\");\n    }\n    if (track.trackNumber < 1) {\n        errors.push(\"Track number must be at least 1\");\n    }\n    if (track.duration < 30) {\n        errors.push(\"Track duration must be at least 30 seconds\");\n    }\n    if (!track.filePath) {\n        errors.push(\"Audio file is required\");\n    }\n    return {\n        valid: errors.length === 0,\n        errors\n    };\n}\n// Validate release for distribution\nfunction validateReleaseForDistribution(release) {\n    const errors = [];\n    // Validate metadata\n    const metadataValidation = validateReleaseMetadata(release.metadata);\n    if (!metadataValidation.valid) {\n        errors.push(...metadataValidation.errors);\n    }\n    // Validate tracks\n    if (release.tracks.length === 0) {\n        errors.push(\"At least one track is required\");\n    }\n    release.tracks.forEach((track, index)=>{\n        const trackValidation = validateTrack(track);\n        if (!trackValidation.valid) {\n            errors.push(`Track ${index + 1}: ${trackValidation.errors.join(\", \")}`);\n        }\n    });\n    // Validate artwork\n    if (!release.artworkPath) {\n        errors.push(\"Cover artwork is required\");\n    }\n    // Validate release type vs track count\n    if (release.metadata.type === \"SINGLE\" && release.tracks.length !== 1) {\n        errors.push(\"Single releases must have exactly 1 track\");\n    }\n    if (release.metadata.type === \"EP\" && (release.tracks.length < 2 || release.tracks.length > 6)) {\n        errors.push(\"EP releases must have 2-6 tracks\");\n    }\n    if (release.metadata.type === \"ALBUM\" && release.tracks.length < 7) {\n        errors.push(\"Album releases must have at least 7 tracks\");\n    }\n    return {\n        valid: errors.length === 0,\n        errors\n    };\n}\n// Calculate release duration\nfunction calculateReleaseDuration(tracks) {\n    return tracks.reduce((total, track)=>total + track.duration, 0);\n}\n// Format duration in MM:SS format\nfunction formatDuration(seconds) {\n    const minutes = Math.floor(seconds / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds.toString().padStart(2, \"0\")}`;\n}\n// Get release status color\nfunction getReleaseStatusColor(status) {\n    switch(status){\n        case \"DRAFT\":\n            return \"gray\";\n        case \"SUBMITTED\":\n            return \"blue\";\n        case \"PROCESSING\":\n            return \"yellow\";\n        case \"DISTRIBUTED\":\n            return \"green\";\n        case \"REJECTED\":\n            return \"red\";\n        default:\n            return \"gray\";\n    }\n}\n// Get release status text\nfunction getReleaseStatusText(status) {\n    switch(status){\n        case \"DRAFT\":\n            return \"Draft\";\n        case \"SUBMITTED\":\n            return \"Submitted\";\n        case \"PROCESSING\":\n            return \"Processing\";\n        case \"DISTRIBUTED\":\n            return \"Live\";\n        case \"REJECTED\":\n            return \"Rejected\";\n        default:\n            return \"Unknown\";\n    }\n}\n// Calculate distribution progress\nfunction calculateDistributionProgress(platforms) {\n    const total = platforms.length;\n    const completed = platforms.filter((p)=>p.status === \"LIVE\").length;\n    const percentage = total > 0 ? Math.round(completed / total * 100) : 0;\n    return {\n        total,\n        completed,\n        percentage\n    };\n}\n// Generate release summary\nfunction generateReleaseSummary(release) {\n    const trackCount = release.tracks.length;\n    const totalDuration = formatDuration(calculateReleaseDuration(release.tracks));\n    const status = getReleaseStatusText(release.status);\n    const platforms = release.platforms.length;\n    return {\n        trackCount,\n        totalDuration,\n        status,\n        platforms\n    };\n}\n// Check if release can be edited\nfunction canEditRelease(release) {\n    return release.status === \"DRAFT\" || release.status === \"REJECTED\";\n}\n// Check if release can be deleted\nfunction canDeleteRelease(release) {\n    return release.status === \"DRAFT\";\n}\n// Get release type display name\nfunction getReleaseTypeDisplayName(type) {\n    switch(type){\n        case \"SINGLE\":\n            return \"Single\";\n        case \"EP\":\n            return \"EP\";\n        case \"ALBUM\":\n            return \"Album\";\n        default:\n            return \"Unknown\";\n    }\n}\n// Generate release filename\nfunction generateReleaseFilename(release) {\n    const artist = release.metadata.artist.replace(/[^a-zA-Z0-9]/g, \"_\");\n    const title = release.metadata.title.replace(/[^a-zA-Z0-9]/g, \"_\");\n    const type = release.metadata.type.toLowerCase();\n    return `${artist}_${title}_${type}_${release.id}`;\n}\n// Validate release date\nfunction validateReleaseDate(dateString) {\n    const date = new Date(dateString);\n    const today = new Date();\n    today.setHours(0, 0, 0, 0);\n    if (isNaN(date.getTime())) {\n        return {\n            valid: false,\n            error: \"Invalid date format\"\n        };\n    }\n    if (date < today) {\n        return {\n            valid: false,\n            error: \"Release date cannot be in the past\"\n        };\n    }\n    const maxFutureDate = new Date();\n    maxFutureDate.setFullYear(maxFutureDate.getFullYear() + 2);\n    if (date > maxFutureDate) {\n        return {\n            valid: false,\n            error: \"Release date cannot be more than 2 years in the future\"\n        };\n    }\n    return {\n        valid: true\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/release-logic.ts\n");

/***/ }),

/***/ "(rsc)/./lib/upload-logic.ts":
/*!*****************************!*\
  !*** ./lib/upload-logic.ts ***!
  \*****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FILE_CONSTRAINTS: () => (/* binding */ FILE_CONSTRAINTS),\n/* harmony export */   checkFileExists: () => (/* binding */ checkFileExists),\n/* harmony export */   cleanupTempFiles: () => (/* binding */ cleanupTempFiles),\n/* harmony export */   createUploadDirectories: () => (/* binding */ createUploadDirectories),\n/* harmony export */   formatFileSize: () => (/* binding */ formatFileSize),\n/* harmony export */   generateFileHash: () => (/* binding */ generateFileHash),\n/* harmony export */   generateFileId: () => (/* binding */ generateFileId),\n/* harmony export */   generateSafeFilename: () => (/* binding */ generateSafeFilename),\n/* harmony export */   getFileCategory: () => (/* binding */ getFileCategory),\n/* harmony export */   processAudioMetadata: () => (/* binding */ processAudioMetadata),\n/* harmony export */   processImageMetadata: () => (/* binding */ processImageMetadata),\n/* harmony export */   saveUploadedFile: () => (/* binding */ saveUploadedFile),\n/* harmony export */   validateAudioFile: () => (/* binding */ validateAudioFile),\n/* harmony export */   validateImageFile: () => (/* binding */ validateImageFile),\n/* harmony export */   validateUploadProgress: () => (/* binding */ validateUploadProgress)\n/* harmony export */ });\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! crypto */ \"crypto\");\n/* harmony import */ var crypto__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(crypto__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs/promises */ \"fs/promises\");\n/* harmony import */ var fs_promises__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs_promises__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_3__);\n\n\n\n\n// File validation constants\nconst FILE_CONSTRAINTS = {\n    AUDIO: {\n        MAX_SIZE: 50 * 1024 * 1024,\n        ALLOWED_TYPES: [\n            \"audio/mpeg\",\n            \"audio/wav\",\n            \"audio/flac\",\n            \"audio/mp3\"\n        ],\n        ALLOWED_EXTENSIONS: [\n            \".mp3\",\n            \".wav\",\n            \".flac\"\n        ]\n    },\n    IMAGE: {\n        MAX_SIZE: 2 * 1024 * 1024,\n        ALLOWED_TYPES: [\n            \"image/jpeg\",\n            \"image/jpg\",\n            \"image/png\",\n            \"image/webp\"\n        ],\n        ALLOWED_EXTENSIONS: [\n            \".jpg\",\n            \".jpeg\",\n            \".png\",\n            \".webp\"\n        ]\n    }\n};\n// Validate audio file\nfunction validateAudioFile(file) {\n    const { MAX_SIZE, ALLOWED_TYPES, ALLOWED_EXTENSIONS } = FILE_CONSTRAINTS.AUDIO;\n    // Check file type\n    if (!ALLOWED_TYPES.includes(file.type)) {\n        return {\n            valid: false,\n            error: \"Please upload MP3, WAV, or FLAC files only\"\n        };\n    }\n    // Check file size\n    if (file.size > MAX_SIZE) {\n        return {\n            valid: false,\n            error: `File size must be less than ${Math.round(MAX_SIZE / (1024 * 1024))}MB`\n        };\n    }\n    // Get file extension\n    const extension = \".\" + file.name.split(\".\").pop()?.toLowerCase();\n    if (!ALLOWED_EXTENSIONS.includes(extension)) {\n        return {\n            valid: false,\n            error: \"Invalid file extension\"\n        };\n    }\n    return {\n        valid: true,\n        fileInfo: {\n            name: file.name,\n            size: file.size,\n            type: file.type,\n            extension\n        }\n    };\n}\n// Validate image file\nfunction validateImageFile(file) {\n    const { MAX_SIZE, ALLOWED_TYPES, ALLOWED_EXTENSIONS } = FILE_CONSTRAINTS.IMAGE;\n    // Check file type\n    if (!ALLOWED_TYPES.includes(file.type)) {\n        return {\n            valid: false,\n            error: \"Please upload JPG, PNG, or WebP files only\"\n        };\n    }\n    // Check file size\n    if (file.size > MAX_SIZE) {\n        return {\n            valid: false,\n            error: `File size must be less than ${Math.round(MAX_SIZE / (1024 * 1024))}MB`\n        };\n    }\n    // Get file extension\n    const extension = \".\" + file.name.split(\".\").pop()?.toLowerCase();\n    if (!ALLOWED_EXTENSIONS.includes(extension)) {\n        return {\n            valid: false,\n            error: \"Invalid file extension\"\n        };\n    }\n    return {\n        valid: true,\n        fileInfo: {\n            name: file.name,\n            size: file.size,\n            type: file.type,\n            extension\n        }\n    };\n}\n// Generate unique file ID\nfunction generateFileId() {\n    return (0,crypto__WEBPACK_IMPORTED_MODULE_0__.randomBytes)(16).toString(\"hex\");\n}\n// Generate safe filename\nfunction generateSafeFilename(originalName, fileId) {\n    const extension = originalName.split(\".\").pop()?.toLowerCase() || \"\";\n    const sanitizedName = originalName.replace(/[^a-zA-Z0-9.-]/g, \"_\").replace(/_{2,}/g, \"_\").toLowerCase();\n    return `${fileId}_${sanitizedName}`;\n}\n// Create upload directory structure\nasync function createUploadDirectories(userId) {\n    const baseDir = (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(process.cwd(), \"uploads\");\n    const userDir = (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(baseDir, userId);\n    const audioDir = (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(userDir, \"audio\");\n    const imageDir = (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(userDir, \"images\");\n    // Create directories if they don't exist\n    if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(baseDir)) await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.mkdir)(baseDir, {\n        recursive: true\n    });\n    if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(userDir)) await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.mkdir)(userDir, {\n        recursive: true\n    });\n    if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(audioDir)) await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.mkdir)(audioDir, {\n        recursive: true\n    });\n    if (!(0,fs__WEBPACK_IMPORTED_MODULE_3__.existsSync)(imageDir)) await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.mkdir)(imageDir, {\n        recursive: true\n    });\n    return userDir;\n}\n// Save uploaded file\nasync function saveUploadedFile(file, userId, fileType) {\n    try {\n        const fileId = generateFileId();\n        const safeFilename = generateSafeFilename(file.name, fileId);\n        const userDir = await createUploadDirectories(userId);\n        const filePath = (0,path__WEBPACK_IMPORTED_MODULE_2__.join)(userDir, fileType, safeFilename);\n        // Convert File to Buffer\n        const arrayBuffer = await file.arrayBuffer();\n        const buffer = Buffer.from(arrayBuffer);\n        // Write file to disk\n        await (0,fs_promises__WEBPACK_IMPORTED_MODULE_1__.writeFile)(filePath, buffer);\n        return {\n            success: true,\n            filePath: filePath.replace(process.cwd(), \"\")\n        };\n    } catch (error) {\n        return {\n            success: false,\n            error: error instanceof Error ? error.message : \"Failed to save file\"\n        };\n    }\n}\n// Process audio file metadata\nasync function processAudioMetadata(filePath) {\n    // This would typically use a library like node-ffmpeg or music-metadata\n    // For now, return mock data\n    return {\n        duration: 180,\n        bitrate: 320,\n        sampleRate: 44100,\n        channels: 2,\n        format: \"mp3\"\n    };\n}\n// Process image metadata\nasync function processImageMetadata(filePath) {\n    // This would typically use a library like sharp or jimp\n    // For now, return mock data\n    return {\n        width: 3000,\n        height: 3000,\n        format: \"jpeg\",\n        colorSpace: \"sRGB\"\n    };\n}\n// Generate file hash for deduplication\nasync function generateFileHash(buffer) {\n    const crypto = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! crypto */ \"crypto\", 23));\n    return crypto.createHash(\"sha256\").update(buffer).digest(\"hex\");\n}\n// Check if file already exists (deduplication)\nasync function checkFileExists(hash) {\n    // This would check against a database of file hashes\n    // For now, return false\n    return false;\n}\n// Clean up temporary files\nasync function cleanupTempFiles(filePaths) {\n    const { unlink } = await Promise.resolve(/*! import() */).then(__webpack_require__.t.bind(__webpack_require__, /*! fs/promises */ \"fs/promises\", 23));\n    for (const filePath of filePaths){\n        try {\n            await unlink(filePath);\n        } catch (error) {\n            console.error(`Failed to delete temp file ${filePath}:`, error);\n        }\n    }\n}\n// Get file size in human readable format\nfunction formatFileSize(bytes) {\n    const sizes = [\n        \"Bytes\",\n        \"KB\",\n        \"MB\",\n        \"GB\"\n    ];\n    if (bytes === 0) return \"0 Bytes\";\n    const i = Math.floor(Math.log(bytes) / Math.log(1024));\n    return Math.round(bytes / Math.pow(1024, i) * 100) / 100 + \" \" + sizes[i];\n}\n// Get file type category\nfunction getFileCategory(mimeType) {\n    if (mimeType.startsWith(\"audio/\")) return \"audio\";\n    if (mimeType.startsWith(\"image/\")) return \"image\";\n    return \"other\";\n}\n// Validate file upload progress\nfunction validateUploadProgress(progress) {\n    return progress.progress >= 0 && progress.progress <= 100 && [\n        \"uploading\",\n        \"processing\",\n        \"completed\",\n        \"error\"\n    ].includes(progress.status);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9saWIvdXBsb2FkLWxvZ2ljLnRzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQXFDO0FBQ1U7QUFDbkI7QUFDSTtBQXFCaEMsNEJBQTRCO0FBQ3JCLE1BQU1LLG1CQUFtQjtJQUM5QkMsT0FBTztRQUNMQyxVQUFVLEtBQUssT0FBTztRQUN0QkMsZUFBZTtZQUFDO1lBQWM7WUFBYTtZQUFjO1NBQVk7UUFDckVDLG9CQUFvQjtZQUFDO1lBQVE7WUFBUTtTQUFRO0lBQy9DO0lBQ0FDLE9BQU87UUFDTEgsVUFBVSxJQUFJLE9BQU87UUFDckJDLGVBQWU7WUFBQztZQUFjO1lBQWE7WUFBYTtTQUFhO1FBQ3JFQyxvQkFBb0I7WUFBQztZQUFRO1lBQVM7WUFBUTtTQUFRO0lBQ3hEO0FBQ0YsRUFBRTtBQUVGLHNCQUFzQjtBQUNmLFNBQVNFLGtCQUFrQkMsSUFBVTtJQUMxQyxNQUFNLEVBQUVMLFFBQVEsRUFBRUMsYUFBYSxFQUFFQyxrQkFBa0IsRUFBRSxHQUFHSixpQkFBaUJDLEtBQUs7SUFFOUUsa0JBQWtCO0lBQ2xCLElBQUksQ0FBQ0UsY0FBY0ssUUFBUSxDQUFDRCxLQUFLRSxJQUFJLEdBQUc7UUFDdEMsT0FBTztZQUNMQyxPQUFPO1lBQ1BDLE9BQU87UUFDVDtJQUNGO0lBRUEsa0JBQWtCO0lBQ2xCLElBQUlKLEtBQUtLLElBQUksR0FBR1YsVUFBVTtRQUN4QixPQUFPO1lBQ0xRLE9BQU87WUFDUEMsT0FBTyxDQUFDLDRCQUE0QixFQUFFRSxLQUFLQyxLQUFLLENBQUNaLFdBQVksUUFBTyxJQUFHLEdBQUksRUFBRSxDQUFDO1FBQ2hGO0lBQ0Y7SUFFQSxxQkFBcUI7SUFDckIsTUFBTWEsWUFBWSxNQUFNUixLQUFLUyxJQUFJLENBQUNDLEtBQUssQ0FBQyxLQUFLQyxHQUFHLElBQUlDO0lBQ3BELElBQUksQ0FBQ2YsbUJBQW1CSSxRQUFRLENBQUNPLFlBQVk7UUFDM0MsT0FBTztZQUNMTCxPQUFPO1lBQ1BDLE9BQU87UUFDVDtJQUNGO0lBRUEsT0FBTztRQUNMRCxPQUFPO1FBQ1BVLFVBQVU7WUFDUkosTUFBTVQsS0FBS1MsSUFBSTtZQUNmSixNQUFNTCxLQUFLSyxJQUFJO1lBQ2ZILE1BQU1GLEtBQUtFLElBQUk7WUFDZk07UUFDRjtJQUNGO0FBQ0Y7QUFFQSxzQkFBc0I7QUFDZixTQUFTTSxrQkFBa0JkLElBQVU7SUFDMUMsTUFBTSxFQUFFTCxRQUFRLEVBQUVDLGFBQWEsRUFBRUMsa0JBQWtCLEVBQUUsR0FBR0osaUJBQWlCSyxLQUFLO0lBRTlFLGtCQUFrQjtJQUNsQixJQUFJLENBQUNGLGNBQWNLLFFBQVEsQ0FBQ0QsS0FBS0UsSUFBSSxHQUFHO1FBQ3RDLE9BQU87WUFDTEMsT0FBTztZQUNQQyxPQUFPO1FBQ1Q7SUFDRjtJQUVBLGtCQUFrQjtJQUNsQixJQUFJSixLQUFLSyxJQUFJLEdBQUdWLFVBQVU7UUFDeEIsT0FBTztZQUNMUSxPQUFPO1lBQ1BDLE9BQU8sQ0FBQyw0QkFBNEIsRUFBRUUsS0FBS0MsS0FBSyxDQUFDWixXQUFZLFFBQU8sSUFBRyxHQUFJLEVBQUUsQ0FBQztRQUNoRjtJQUNGO0lBRUEscUJBQXFCO0lBQ3JCLE1BQU1hLFlBQVksTUFBTVIsS0FBS1MsSUFBSSxDQUFDQyxLQUFLLENBQUMsS0FBS0MsR0FBRyxJQUFJQztJQUNwRCxJQUFJLENBQUNmLG1CQUFtQkksUUFBUSxDQUFDTyxZQUFZO1FBQzNDLE9BQU87WUFDTEwsT0FBTztZQUNQQyxPQUFPO1FBQ1Q7SUFDRjtJQUVBLE9BQU87UUFDTEQsT0FBTztRQUNQVSxVQUFVO1lBQ1JKLE1BQU1ULEtBQUtTLElBQUk7WUFDZkosTUFBTUwsS0FBS0ssSUFBSTtZQUNmSCxNQUFNRixLQUFLRSxJQUFJO1lBQ2ZNO1FBQ0Y7SUFDRjtBQUNGO0FBRUEsMEJBQTBCO0FBQ25CLFNBQVNPO0lBQ2QsT0FBTzNCLG1EQUFXQSxDQUFDLElBQUk0QixRQUFRLENBQUM7QUFDbEM7QUFFQSx5QkFBeUI7QUFDbEIsU0FBU0MscUJBQXFCQyxZQUFvQixFQUFFQyxNQUFjO0lBQ3ZFLE1BQU1YLFlBQVlVLGFBQWFSLEtBQUssQ0FBQyxLQUFLQyxHQUFHLElBQUlDLGlCQUFpQjtJQUNsRSxNQUFNUSxnQkFBZ0JGLGFBQ25CRyxPQUFPLENBQUMsbUJBQW1CLEtBQzNCQSxPQUFPLENBQUMsVUFBVSxLQUNsQlQsV0FBVztJQUVkLE9BQU8sQ0FBQyxFQUFFTyxPQUFPLENBQUMsRUFBRUMsY0FBYyxDQUFDO0FBQ3JDO0FBRUEsb0NBQW9DO0FBQzdCLGVBQWVFLHdCQUF3QkMsTUFBYztJQUMxRCxNQUFNQyxVQUFVakMsMENBQUlBLENBQUNrQyxRQUFRQyxHQUFHLElBQUk7SUFDcEMsTUFBTUMsVUFBVXBDLDBDQUFJQSxDQUFDaUMsU0FBU0Q7SUFDOUIsTUFBTUssV0FBV3JDLDBDQUFJQSxDQUFDb0MsU0FBUztJQUMvQixNQUFNRSxXQUFXdEMsMENBQUlBLENBQUNvQyxTQUFTO0lBRS9CLHlDQUF5QztJQUN6QyxJQUFJLENBQUNuQyw4Q0FBVUEsQ0FBQ2dDLFVBQVUsTUFBTWxDLGtEQUFLQSxDQUFDa0MsU0FBUztRQUFFTSxXQUFXO0lBQUs7SUFDakUsSUFBSSxDQUFDdEMsOENBQVVBLENBQUNtQyxVQUFVLE1BQU1yQyxrREFBS0EsQ0FBQ3FDLFNBQVM7UUFBRUcsV0FBVztJQUFLO0lBQ2pFLElBQUksQ0FBQ3RDLDhDQUFVQSxDQUFDb0MsV0FBVyxNQUFNdEMsa0RBQUtBLENBQUNzQyxVQUFVO1FBQUVFLFdBQVc7SUFBSztJQUNuRSxJQUFJLENBQUN0Qyw4Q0FBVUEsQ0FBQ3FDLFdBQVcsTUFBTXZDLGtEQUFLQSxDQUFDdUMsVUFBVTtRQUFFQyxXQUFXO0lBQUs7SUFFbkUsT0FBT0g7QUFDVDtBQUVBLHFCQUFxQjtBQUNkLGVBQWVJLGlCQUNwQi9CLElBQVUsRUFDVnVCLE1BQWMsRUFDZFMsUUFBMkI7SUFFM0IsSUFBSTtRQUNGLE1BQU1iLFNBQVNKO1FBQ2YsTUFBTWtCLGVBQWVoQixxQkFBcUJqQixLQUFLUyxJQUFJLEVBQUVVO1FBQ3JELE1BQU1RLFVBQVUsTUFBTUwsd0JBQXdCQztRQUU5QyxNQUFNVyxXQUFXM0MsMENBQUlBLENBQUNvQyxTQUFTSyxVQUFVQztRQUV6Qyx5QkFBeUI7UUFDekIsTUFBTUUsY0FBYyxNQUFNbkMsS0FBS21DLFdBQVc7UUFDMUMsTUFBTUMsU0FBU0MsT0FBT0MsSUFBSSxDQUFDSDtRQUUzQixxQkFBcUI7UUFDckIsTUFBTTlDLHNEQUFTQSxDQUFDNkMsVUFBVUU7UUFFMUIsT0FBTztZQUNMRyxTQUFTO1lBQ1RMLFVBQVVBLFNBQVNiLE9BQU8sQ0FBQ0ksUUFBUUMsR0FBRyxJQUFJO1FBQzVDO0lBQ0YsRUFBRSxPQUFPdEIsT0FBTztRQUNkLE9BQU87WUFDTG1DLFNBQVM7WUFDVG5DLE9BQU9BLGlCQUFpQm9DLFFBQVFwQyxNQUFNcUMsT0FBTyxHQUFHO1FBQ2xEO0lBQ0Y7QUFDRjtBQUVBLDhCQUE4QjtBQUN2QixlQUFlQyxxQkFBcUJSLFFBQWdCO0lBT3pELHdFQUF3RTtJQUN4RSw0QkFBNEI7SUFDNUIsT0FBTztRQUNMUyxVQUFVO1FBQ1ZDLFNBQVM7UUFDVEMsWUFBWTtRQUNaQyxVQUFVO1FBQ1ZDLFFBQVE7SUFDVjtBQUNGO0FBRUEseUJBQXlCO0FBQ2xCLGVBQWVDLHFCQUFxQmQsUUFBZ0I7SUFNekQsd0RBQXdEO0lBQ3hELDRCQUE0QjtJQUM1QixPQUFPO1FBQ0xlLE9BQU87UUFDUEMsUUFBUTtRQUNSSCxRQUFRO1FBQ1JJLFlBQVk7SUFDZDtBQUNGO0FBRUEsdUNBQXVDO0FBQ2hDLGVBQWVDLGlCQUFpQmhCLE1BQWM7SUFDbkQsTUFBTWlCLFNBQVMsTUFBTSxrSEFBTztJQUM1QixPQUFPQSxPQUFPQyxVQUFVLENBQUMsVUFBVUMsTUFBTSxDQUFDbkIsUUFBUW9CLE1BQU0sQ0FBQztBQUMzRDtBQUVBLCtDQUErQztBQUN4QyxlQUFlQyxnQkFBZ0JDLElBQVk7SUFDaEQscURBQXFEO0lBQ3JELHdCQUF3QjtJQUN4QixPQUFPO0FBQ1Q7QUFFQSwyQkFBMkI7QUFDcEIsZUFBZUMsaUJBQWlCQyxTQUFtQjtJQUN4RCxNQUFNLEVBQUVDLE1BQU0sRUFBRSxHQUFHLE1BQU0sNEhBQU87SUFFaEMsS0FBSyxNQUFNM0IsWUFBWTBCLFVBQVc7UUFDaEMsSUFBSTtZQUNGLE1BQU1DLE9BQU8zQjtRQUNmLEVBQUUsT0FBTzlCLE9BQU87WUFDZDBELFFBQVExRCxLQUFLLENBQUMsQ0FBQywyQkFBMkIsRUFBRThCLFNBQVMsQ0FBQyxDQUFDLEVBQUU5QjtRQUMzRDtJQUNGO0FBQ0Y7QUFFQSx5Q0FBeUM7QUFDbEMsU0FBUzJELGVBQWVDLEtBQWE7SUFDMUMsTUFBTUMsUUFBUTtRQUFDO1FBQVM7UUFBTTtRQUFNO0tBQUs7SUFDekMsSUFBSUQsVUFBVSxHQUFHLE9BQU87SUFFeEIsTUFBTUUsSUFBSTVELEtBQUs2RCxLQUFLLENBQUM3RCxLQUFLOEQsR0FBRyxDQUFDSixTQUFTMUQsS0FBSzhELEdBQUcsQ0FBQztJQUNoRCxPQUFPOUQsS0FBS0MsS0FBSyxDQUFDeUQsUUFBUTFELEtBQUsrRCxHQUFHLENBQUMsTUFBTUgsS0FBSyxPQUFPLE1BQU0sTUFBTUQsS0FBSyxDQUFDQyxFQUFFO0FBQzNFO0FBRUEseUJBQXlCO0FBQ2xCLFNBQVNJLGdCQUFnQkMsUUFBZ0I7SUFDOUMsSUFBSUEsU0FBU0MsVUFBVSxDQUFDLFdBQVcsT0FBTztJQUMxQyxJQUFJRCxTQUFTQyxVQUFVLENBQUMsV0FBVyxPQUFPO0lBQzFDLE9BQU87QUFDVDtBQUVBLGdDQUFnQztBQUN6QixTQUFTQyx1QkFBdUJDLFFBQXdCO0lBQzdELE9BQ0VBLFNBQVNBLFFBQVEsSUFBSSxLQUNyQkEsU0FBU0EsUUFBUSxJQUFJLE9BQ3JCO1FBQUM7UUFBYTtRQUFjO1FBQWE7S0FBUSxDQUFDekUsUUFBUSxDQUFDeUUsU0FBU0MsTUFBTTtBQUU5RSIsInNvdXJjZXMiOlsid2VicGFjazovL2t1c2h0dW5lcy1tb2JpbGUtYXBwLy4vbGliL3VwbG9hZC1sb2dpYy50cz9jODg4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJhbmRvbUJ5dGVzIH0gZnJvbSAnY3J5cHRvJztcbmltcG9ydCB7IHdyaXRlRmlsZSwgbWtkaXIgfSBmcm9tICdmcy9wcm9taXNlcyc7XG5pbXBvcnQgeyBqb2luIH0gZnJvbSAncGF0aCc7XG5pbXBvcnQgeyBleGlzdHNTeW5jIH0gZnJvbSAnZnMnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEZpbGVWYWxpZGF0aW9uUmVzdWx0IHtcbiAgdmFsaWQ6IGJvb2xlYW47XG4gIGVycm9yPzogc3RyaW5nO1xuICBmaWxlSW5mbz86IHtcbiAgICBuYW1lOiBzdHJpbmc7XG4gICAgc2l6ZTogbnVtYmVyO1xuICAgIHR5cGU6IHN0cmluZztcbiAgICBleHRlbnNpb246IHN0cmluZztcbiAgfTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBVcGxvYWRQcm9ncmVzcyB7XG4gIGZpbGVJZDogc3RyaW5nO1xuICBmaWxlTmFtZTogc3RyaW5nO1xuICBwcm9ncmVzczogbnVtYmVyO1xuICBzdGF0dXM6ICd1cGxvYWRpbmcnIHwgJ3Byb2Nlc3NpbmcnIHwgJ2NvbXBsZXRlZCcgfCAnZXJyb3InO1xuICBlcnJvcj86IHN0cmluZztcbn1cblxuLy8gRmlsZSB2YWxpZGF0aW9uIGNvbnN0YW50c1xuZXhwb3J0IGNvbnN0IEZJTEVfQ09OU1RSQUlOVFMgPSB7XG4gIEFVRElPOiB7XG4gICAgTUFYX1NJWkU6IDUwICogMTAyNCAqIDEwMjQsIC8vIDUwTUJcbiAgICBBTExPV0VEX1RZUEVTOiBbJ2F1ZGlvL21wZWcnLCAnYXVkaW8vd2F2JywgJ2F1ZGlvL2ZsYWMnLCAnYXVkaW8vbXAzJ10sXG4gICAgQUxMT1dFRF9FWFRFTlNJT05TOiBbJy5tcDMnLCAnLndhdicsICcuZmxhYyddXG4gIH0sXG4gIElNQUdFOiB7XG4gICAgTUFYX1NJWkU6IDIgKiAxMDI0ICogMTAyNCwgLy8gMk1CXG4gICAgQUxMT1dFRF9UWVBFUzogWydpbWFnZS9qcGVnJywgJ2ltYWdlL2pwZycsICdpbWFnZS9wbmcnLCAnaW1hZ2Uvd2VicCddLFxuICAgIEFMTE9XRURfRVhURU5TSU9OUzogWycuanBnJywgJy5qcGVnJywgJy5wbmcnLCAnLndlYnAnXVxuICB9XG59O1xuXG4vLyBWYWxpZGF0ZSBhdWRpbyBmaWxlXG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVBdWRpb0ZpbGUoZmlsZTogRmlsZSk6IEZpbGVWYWxpZGF0aW9uUmVzdWx0IHtcbiAgY29uc3QgeyBNQVhfU0laRSwgQUxMT1dFRF9UWVBFUywgQUxMT1dFRF9FWFRFTlNJT05TIH0gPSBGSUxFX0NPTlNUUkFJTlRTLkFVRElPO1xuICBcbiAgLy8gQ2hlY2sgZmlsZSB0eXBlXG4gIGlmICghQUxMT1dFRF9UWVBFUy5pbmNsdWRlcyhmaWxlLnR5cGUpKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnUGxlYXNlIHVwbG9hZCBNUDMsIFdBViwgb3IgRkxBQyBmaWxlcyBvbmx5J1xuICAgIH07XG4gIH1cbiAgXG4gIC8vIENoZWNrIGZpbGUgc2l6ZVxuICBpZiAoZmlsZS5zaXplID4gTUFYX1NJWkUpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsaWQ6IGZhbHNlLFxuICAgICAgZXJyb3I6IGBGaWxlIHNpemUgbXVzdCBiZSBsZXNzIHRoYW4gJHtNYXRoLnJvdW5kKE1BWF9TSVpFIC8gKDEwMjQgKiAxMDI0KSl9TUJgXG4gICAgfTtcbiAgfVxuICBcbiAgLy8gR2V0IGZpbGUgZXh0ZW5zaW9uXG4gIGNvbnN0IGV4dGVuc2lvbiA9ICcuJyArIGZpbGUubmFtZS5zcGxpdCgnLicpLnBvcCgpPy50b0xvd2VyQ2FzZSgpO1xuICBpZiAoIUFMTE9XRURfRVhURU5TSU9OUy5pbmNsdWRlcyhleHRlbnNpb24pKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgIGVycm9yOiAnSW52YWxpZCBmaWxlIGV4dGVuc2lvbidcbiAgICB9O1xuICB9XG4gIFxuICByZXR1cm4ge1xuICAgIHZhbGlkOiB0cnVlLFxuICAgIGZpbGVJbmZvOiB7XG4gICAgICBuYW1lOiBmaWxlLm5hbWUsXG4gICAgICBzaXplOiBmaWxlLnNpemUsXG4gICAgICB0eXBlOiBmaWxlLnR5cGUsXG4gICAgICBleHRlbnNpb25cbiAgICB9XG4gIH07XG59XG5cbi8vIFZhbGlkYXRlIGltYWdlIGZpbGVcbmV4cG9ydCBmdW5jdGlvbiB2YWxpZGF0ZUltYWdlRmlsZShmaWxlOiBGaWxlKTogRmlsZVZhbGlkYXRpb25SZXN1bHQge1xuICBjb25zdCB7IE1BWF9TSVpFLCBBTExPV0VEX1RZUEVTLCBBTExPV0VEX0VYVEVOU0lPTlMgfSA9IEZJTEVfQ09OU1RSQUlOVFMuSU1BR0U7XG4gIFxuICAvLyBDaGVjayBmaWxlIHR5cGVcbiAgaWYgKCFBTExPV0VEX1RZUEVTLmluY2x1ZGVzKGZpbGUudHlwZSkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsaWQ6IGZhbHNlLFxuICAgICAgZXJyb3I6ICdQbGVhc2UgdXBsb2FkIEpQRywgUE5HLCBvciBXZWJQIGZpbGVzIG9ubHknXG4gICAgfTtcbiAgfVxuICBcbiAgLy8gQ2hlY2sgZmlsZSBzaXplXG4gIGlmIChmaWxlLnNpemUgPiBNQVhfU0laRSkge1xuICAgIHJldHVybiB7XG4gICAgICB2YWxpZDogZmFsc2UsXG4gICAgICBlcnJvcjogYEZpbGUgc2l6ZSBtdXN0IGJlIGxlc3MgdGhhbiAke01hdGgucm91bmQoTUFYX1NJWkUgLyAoMTAyNCAqIDEwMjQpKX1NQmBcbiAgICB9O1xuICB9XG4gIFxuICAvLyBHZXQgZmlsZSBleHRlbnNpb25cbiAgY29uc3QgZXh0ZW5zaW9uID0gJy4nICsgZmlsZS5uYW1lLnNwbGl0KCcuJykucG9wKCk/LnRvTG93ZXJDYXNlKCk7XG4gIGlmICghQUxMT1dFRF9FWFRFTlNJT05TLmluY2x1ZGVzKGV4dGVuc2lvbikpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdmFsaWQ6IGZhbHNlLFxuICAgICAgZXJyb3I6ICdJbnZhbGlkIGZpbGUgZXh0ZW5zaW9uJ1xuICAgIH07XG4gIH1cbiAgXG4gIHJldHVybiB7XG4gICAgdmFsaWQ6IHRydWUsXG4gICAgZmlsZUluZm86IHtcbiAgICAgIG5hbWU6IGZpbGUubmFtZSxcbiAgICAgIHNpemU6IGZpbGUuc2l6ZSxcbiAgICAgIHR5cGU6IGZpbGUudHlwZSxcbiAgICAgIGV4dGVuc2lvblxuICAgIH1cbiAgfTtcbn1cblxuLy8gR2VuZXJhdGUgdW5pcXVlIGZpbGUgSURcbmV4cG9ydCBmdW5jdGlvbiBnZW5lcmF0ZUZpbGVJZCgpOiBzdHJpbmcge1xuICByZXR1cm4gcmFuZG9tQnl0ZXMoMTYpLnRvU3RyaW5nKCdoZXgnKTtcbn1cblxuLy8gR2VuZXJhdGUgc2FmZSBmaWxlbmFtZVxuZXhwb3J0IGZ1bmN0aW9uIGdlbmVyYXRlU2FmZUZpbGVuYW1lKG9yaWdpbmFsTmFtZTogc3RyaW5nLCBmaWxlSWQ6IHN0cmluZyk6IHN0cmluZyB7XG4gIGNvbnN0IGV4dGVuc2lvbiA9IG9yaWdpbmFsTmFtZS5zcGxpdCgnLicpLnBvcCgpPy50b0xvd2VyQ2FzZSgpIHx8ICcnO1xuICBjb25zdCBzYW5pdGl6ZWROYW1lID0gb3JpZ2luYWxOYW1lXG4gICAgLnJlcGxhY2UoL1teYS16QS1aMC05Li1dL2csICdfJylcbiAgICAucmVwbGFjZSgvX3syLH0vZywgJ18nKVxuICAgIC50b0xvd2VyQ2FzZSgpO1xuICBcbiAgcmV0dXJuIGAke2ZpbGVJZH1fJHtzYW5pdGl6ZWROYW1lfWA7XG59XG5cbi8vIENyZWF0ZSB1cGxvYWQgZGlyZWN0b3J5IHN0cnVjdHVyZVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVVwbG9hZERpcmVjdG9yaWVzKHVzZXJJZDogc3RyaW5nKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgY29uc3QgYmFzZURpciA9IGpvaW4ocHJvY2Vzcy5jd2QoKSwgJ3VwbG9hZHMnKTtcbiAgY29uc3QgdXNlckRpciA9IGpvaW4oYmFzZURpciwgdXNlcklkKTtcbiAgY29uc3QgYXVkaW9EaXIgPSBqb2luKHVzZXJEaXIsICdhdWRpbycpO1xuICBjb25zdCBpbWFnZURpciA9IGpvaW4odXNlckRpciwgJ2ltYWdlcycpO1xuICBcbiAgLy8gQ3JlYXRlIGRpcmVjdG9yaWVzIGlmIHRoZXkgZG9uJ3QgZXhpc3RcbiAgaWYgKCFleGlzdHNTeW5jKGJhc2VEaXIpKSBhd2FpdCBta2RpcihiYXNlRGlyLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcbiAgaWYgKCFleGlzdHNTeW5jKHVzZXJEaXIpKSBhd2FpdCBta2Rpcih1c2VyRGlyLCB7IHJlY3Vyc2l2ZTogdHJ1ZSB9KTtcbiAgaWYgKCFleGlzdHNTeW5jKGF1ZGlvRGlyKSkgYXdhaXQgbWtkaXIoYXVkaW9EaXIsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xuICBpZiAoIWV4aXN0c1N5bmMoaW1hZ2VEaXIpKSBhd2FpdCBta2RpcihpbWFnZURpciwgeyByZWN1cnNpdmU6IHRydWUgfSk7XG4gIFxuICByZXR1cm4gdXNlckRpcjtcbn1cblxuLy8gU2F2ZSB1cGxvYWRlZCBmaWxlXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2F2ZVVwbG9hZGVkRmlsZShcbiAgZmlsZTogRmlsZSxcbiAgdXNlcklkOiBzdHJpbmcsXG4gIGZpbGVUeXBlOiAnYXVkaW8nIHwgJ2ltYWdlJ1xuKTogUHJvbWlzZTx7IHN1Y2Nlc3M6IGJvb2xlYW47IGZpbGVQYXRoPzogc3RyaW5nOyBlcnJvcj86IHN0cmluZyB9PiB7XG4gIHRyeSB7XG4gICAgY29uc3QgZmlsZUlkID0gZ2VuZXJhdGVGaWxlSWQoKTtcbiAgICBjb25zdCBzYWZlRmlsZW5hbWUgPSBnZW5lcmF0ZVNhZmVGaWxlbmFtZShmaWxlLm5hbWUsIGZpbGVJZCk7XG4gICAgY29uc3QgdXNlckRpciA9IGF3YWl0IGNyZWF0ZVVwbG9hZERpcmVjdG9yaWVzKHVzZXJJZCk7XG4gICAgXG4gICAgY29uc3QgZmlsZVBhdGggPSBqb2luKHVzZXJEaXIsIGZpbGVUeXBlLCBzYWZlRmlsZW5hbWUpO1xuICAgIFxuICAgIC8vIENvbnZlcnQgRmlsZSB0byBCdWZmZXJcbiAgICBjb25zdCBhcnJheUJ1ZmZlciA9IGF3YWl0IGZpbGUuYXJyYXlCdWZmZXIoKTtcbiAgICBjb25zdCBidWZmZXIgPSBCdWZmZXIuZnJvbShhcnJheUJ1ZmZlcik7XG4gICAgXG4gICAgLy8gV3JpdGUgZmlsZSB0byBkaXNrXG4gICAgYXdhaXQgd3JpdGVGaWxlKGZpbGVQYXRoLCBidWZmZXIpO1xuICAgIFxuICAgIHJldHVybiB7XG4gICAgICBzdWNjZXNzOiB0cnVlLFxuICAgICAgZmlsZVBhdGg6IGZpbGVQYXRoLnJlcGxhY2UocHJvY2Vzcy5jd2QoKSwgJycpXG4gICAgfTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICByZXR1cm4ge1xuICAgICAgc3VjY2VzczogZmFsc2UsXG4gICAgICBlcnJvcjogZXJyb3IgaW5zdGFuY2VvZiBFcnJvciA/IGVycm9yLm1lc3NhZ2UgOiAnRmFpbGVkIHRvIHNhdmUgZmlsZSdcbiAgICB9O1xuICB9XG59XG5cbi8vIFByb2Nlc3MgYXVkaW8gZmlsZSBtZXRhZGF0YVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByb2Nlc3NBdWRpb01ldGFkYXRhKGZpbGVQYXRoOiBzdHJpbmcpOiBQcm9taXNlPHtcbiAgZHVyYXRpb24/OiBudW1iZXI7XG4gIGJpdHJhdGU/OiBudW1iZXI7XG4gIHNhbXBsZVJhdGU/OiBudW1iZXI7XG4gIGNoYW5uZWxzPzogbnVtYmVyO1xuICBmb3JtYXQ/OiBzdHJpbmc7XG59PiB7XG4gIC8vIFRoaXMgd291bGQgdHlwaWNhbGx5IHVzZSBhIGxpYnJhcnkgbGlrZSBub2RlLWZmbXBlZyBvciBtdXNpYy1tZXRhZGF0YVxuICAvLyBGb3Igbm93LCByZXR1cm4gbW9jayBkYXRhXG4gIHJldHVybiB7XG4gICAgZHVyYXRpb246IDE4MCwgLy8gMyBtaW51dGVzXG4gICAgYml0cmF0ZTogMzIwLFxuICAgIHNhbXBsZVJhdGU6IDQ0MTAwLFxuICAgIGNoYW5uZWxzOiAyLFxuICAgIGZvcm1hdDogJ21wMydcbiAgfTtcbn1cblxuLy8gUHJvY2VzcyBpbWFnZSBtZXRhZGF0YVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIHByb2Nlc3NJbWFnZU1ldGFkYXRhKGZpbGVQYXRoOiBzdHJpbmcpOiBQcm9taXNlPHtcbiAgd2lkdGg/OiBudW1iZXI7XG4gIGhlaWdodD86IG51bWJlcjtcbiAgZm9ybWF0Pzogc3RyaW5nO1xuICBjb2xvclNwYWNlPzogc3RyaW5nO1xufT4ge1xuICAvLyBUaGlzIHdvdWxkIHR5cGljYWxseSB1c2UgYSBsaWJyYXJ5IGxpa2Ugc2hhcnAgb3IgamltcFxuICAvLyBGb3Igbm93LCByZXR1cm4gbW9jayBkYXRhXG4gIHJldHVybiB7XG4gICAgd2lkdGg6IDMwMDAsXG4gICAgaGVpZ2h0OiAzMDAwLFxuICAgIGZvcm1hdDogJ2pwZWcnLFxuICAgIGNvbG9yU3BhY2U6ICdzUkdCJ1xuICB9O1xufVxuXG4vLyBHZW5lcmF0ZSBmaWxlIGhhc2ggZm9yIGRlZHVwbGljYXRpb25cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZW5lcmF0ZUZpbGVIYXNoKGJ1ZmZlcjogQnVmZmVyKTogUHJvbWlzZTxzdHJpbmc+IHtcbiAgY29uc3QgY3J5cHRvID0gYXdhaXQgaW1wb3J0KCdjcnlwdG8nKTtcbiAgcmV0dXJuIGNyeXB0by5jcmVhdGVIYXNoKCdzaGEyNTYnKS51cGRhdGUoYnVmZmVyKS5kaWdlc3QoJ2hleCcpO1xufVxuXG4vLyBDaGVjayBpZiBmaWxlIGFscmVhZHkgZXhpc3RzIChkZWR1cGxpY2F0aW9uKVxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNoZWNrRmlsZUV4aXN0cyhoYXNoOiBzdHJpbmcpOiBQcm9taXNlPGJvb2xlYW4+IHtcbiAgLy8gVGhpcyB3b3VsZCBjaGVjayBhZ2FpbnN0IGEgZGF0YWJhc2Ugb2YgZmlsZSBoYXNoZXNcbiAgLy8gRm9yIG5vdywgcmV0dXJuIGZhbHNlXG4gIHJldHVybiBmYWxzZTtcbn1cblxuLy8gQ2xlYW4gdXAgdGVtcG9yYXJ5IGZpbGVzXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2xlYW51cFRlbXBGaWxlcyhmaWxlUGF0aHM6IHN0cmluZ1tdKTogUHJvbWlzZTx2b2lkPiB7XG4gIGNvbnN0IHsgdW5saW5rIH0gPSBhd2FpdCBpbXBvcnQoJ2ZzL3Byb21pc2VzJyk7XG4gIFxuICBmb3IgKGNvbnN0IGZpbGVQYXRoIG9mIGZpbGVQYXRocykge1xuICAgIHRyeSB7XG4gICAgICBhd2FpdCB1bmxpbmsoZmlsZVBhdGgpO1xuICAgIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKGBGYWlsZWQgdG8gZGVsZXRlIHRlbXAgZmlsZSAke2ZpbGVQYXRofTpgLCBlcnJvcik7XG4gICAgfVxuICB9XG59XG5cbi8vIEdldCBmaWxlIHNpemUgaW4gaHVtYW4gcmVhZGFibGUgZm9ybWF0XG5leHBvcnQgZnVuY3Rpb24gZm9ybWF0RmlsZVNpemUoYnl0ZXM6IG51bWJlcik6IHN0cmluZyB7XG4gIGNvbnN0IHNpemVzID0gWydCeXRlcycsICdLQicsICdNQicsICdHQiddO1xuICBpZiAoYnl0ZXMgPT09IDApIHJldHVybiAnMCBCeXRlcyc7XG4gIFxuICBjb25zdCBpID0gTWF0aC5mbG9vcihNYXRoLmxvZyhieXRlcykgLyBNYXRoLmxvZygxMDI0KSk7XG4gIHJldHVybiBNYXRoLnJvdW5kKGJ5dGVzIC8gTWF0aC5wb3coMTAyNCwgaSkgKiAxMDApIC8gMTAwICsgJyAnICsgc2l6ZXNbaV07XG59XG5cbi8vIEdldCBmaWxlIHR5cGUgY2F0ZWdvcnlcbmV4cG9ydCBmdW5jdGlvbiBnZXRGaWxlQ2F0ZWdvcnkobWltZVR5cGU6IHN0cmluZyk6ICdhdWRpbycgfCAnaW1hZ2UnIHwgJ290aGVyJyB7XG4gIGlmIChtaW1lVHlwZS5zdGFydHNXaXRoKCdhdWRpby8nKSkgcmV0dXJuICdhdWRpbyc7XG4gIGlmIChtaW1lVHlwZS5zdGFydHNXaXRoKCdpbWFnZS8nKSkgcmV0dXJuICdpbWFnZSc7XG4gIHJldHVybiAnb3RoZXInO1xufVxuXG4vLyBWYWxpZGF0ZSBmaWxlIHVwbG9hZCBwcm9ncmVzc1xuZXhwb3J0IGZ1bmN0aW9uIHZhbGlkYXRlVXBsb2FkUHJvZ3Jlc3MocHJvZ3Jlc3M6IFVwbG9hZFByb2dyZXNzKTogYm9vbGVhbiB7XG4gIHJldHVybiAoXG4gICAgcHJvZ3Jlc3MucHJvZ3Jlc3MgPj0gMCAmJlxuICAgIHByb2dyZXNzLnByb2dyZXNzIDw9IDEwMCAmJlxuICAgIFsndXBsb2FkaW5nJywgJ3Byb2Nlc3NpbmcnLCAnY29tcGxldGVkJywgJ2Vycm9yJ10uaW5jbHVkZXMocHJvZ3Jlc3Muc3RhdHVzKVxuICApO1xufVxuIl0sIm5hbWVzIjpbInJhbmRvbUJ5dGVzIiwid3JpdGVGaWxlIiwibWtkaXIiLCJqb2luIiwiZXhpc3RzU3luYyIsIkZJTEVfQ09OU1RSQUlOVFMiLCJBVURJTyIsIk1BWF9TSVpFIiwiQUxMT1dFRF9UWVBFUyIsIkFMTE9XRURfRVhURU5TSU9OUyIsIklNQUdFIiwidmFsaWRhdGVBdWRpb0ZpbGUiLCJmaWxlIiwiaW5jbHVkZXMiLCJ0eXBlIiwidmFsaWQiLCJlcnJvciIsInNpemUiLCJNYXRoIiwicm91bmQiLCJleHRlbnNpb24iLCJuYW1lIiwic3BsaXQiLCJwb3AiLCJ0b0xvd2VyQ2FzZSIsImZpbGVJbmZvIiwidmFsaWRhdGVJbWFnZUZpbGUiLCJnZW5lcmF0ZUZpbGVJZCIsInRvU3RyaW5nIiwiZ2VuZXJhdGVTYWZlRmlsZW5hbWUiLCJvcmlnaW5hbE5hbWUiLCJmaWxlSWQiLCJzYW5pdGl6ZWROYW1lIiwicmVwbGFjZSIsImNyZWF0ZVVwbG9hZERpcmVjdG9yaWVzIiwidXNlcklkIiwiYmFzZURpciIsInByb2Nlc3MiLCJjd2QiLCJ1c2VyRGlyIiwiYXVkaW9EaXIiLCJpbWFnZURpciIsInJlY3Vyc2l2ZSIsInNhdmVVcGxvYWRlZEZpbGUiLCJmaWxlVHlwZSIsInNhZmVGaWxlbmFtZSIsImZpbGVQYXRoIiwiYXJyYXlCdWZmZXIiLCJidWZmZXIiLCJCdWZmZXIiLCJmcm9tIiwic3VjY2VzcyIsIkVycm9yIiwibWVzc2FnZSIsInByb2Nlc3NBdWRpb01ldGFkYXRhIiwiZHVyYXRpb24iLCJiaXRyYXRlIiwic2FtcGxlUmF0ZSIsImNoYW5uZWxzIiwiZm9ybWF0IiwicHJvY2Vzc0ltYWdlTWV0YWRhdGEiLCJ3aWR0aCIsImhlaWdodCIsImNvbG9yU3BhY2UiLCJnZW5lcmF0ZUZpbGVIYXNoIiwiY3J5cHRvIiwiY3JlYXRlSGFzaCIsInVwZGF0ZSIsImRpZ2VzdCIsImNoZWNrRmlsZUV4aXN0cyIsImhhc2giLCJjbGVhbnVwVGVtcEZpbGVzIiwiZmlsZVBhdGhzIiwidW5saW5rIiwiY29uc29sZSIsImZvcm1hdEZpbGVTaXplIiwiYnl0ZXMiLCJzaXplcyIsImkiLCJmbG9vciIsImxvZyIsInBvdyIsImdldEZpbGVDYXRlZ29yeSIsIm1pbWVUeXBlIiwic3RhcnRzV2l0aCIsInZhbGlkYXRlVXBsb2FkUHJvZ3Jlc3MiLCJwcm9ncmVzcyIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./lib/upload-logic.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/semver","vendor-chunks/prisma","vendor-chunks/bcryptjs","vendor-chunks/jsonwebtoken","vendor-chunks/lodash.includes","vendor-chunks/jws","vendor-chunks/jwa","vendor-chunks/lodash.once","vendor-chunks/lodash.isinteger","vendor-chunks/ecdsa-sig-formatter","vendor-chunks/lodash.isplainobject","vendor-chunks/ms","vendor-chunks/lodash.isstring","vendor-chunks/lodash.isnumber","vendor-chunks/lodash.isboolean","vendor-chunks/safe-buffer","vendor-chunks/buffer-equal-constant-time","vendor-chunks/@prisma"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Fupload%2Froute&page=%2Fapi%2Fupload%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Fupload%2Froute.ts&appDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter%2Fapp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=%2FUsers%2Fwizloxssd%2FDownloads%2Fkushtunes-starter&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();