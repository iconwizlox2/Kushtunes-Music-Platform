"use strict";(()=>{var e={};e.id=501,e.ids=[501],e.modules={3524:e=>{e.exports=require("@prisma/client")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},5924:(e,t,s)=>{s.r(t),s.d(t,{headerHooks:()=>S,originalPathname:()=>f,requestAsyncStorage:()=>m,routeModule:()=>d,serverHooks:()=>p,staticGenerationAsyncStorage:()=>l,staticGenerationBailout:()=>b});var a={};s.r(a),s.d(a,{GET:()=>GET,POST:()=>POST});var r=s(884),i=s(6132),o=s(5798),u=s(3524);let n=new u.PrismaClient,c={CDBABY_ALL:{name:"CD Baby (100+ Platforms)",platforms:["Spotify","Apple Music","Amazon Music","YouTube Music","Tidal","Deezer","Pandora","iTunes","Google Play Music","SoundCloud","Bandcamp","Napster","iHeartRadio","Slacker","Mixcloud","8tracks","Jango","Last.fm","Grooveshark","Rdio"],estimatedTime:"2-4 weeks",cost:"$9.95 per single, $29 per album",successRate:.95,revenueShare:.91},AMUSE_FREE:{name:"Amuse (Free - Major Platforms)",platforms:["Spotify","Apple Music","Amazon Music","YouTube Music","Deezer","Tidal"],estimatedTime:"1-2 weeks",cost:"100% FREE",successRate:.88,revenueShare:1},SPOTIFY:{name:"Spotify Direct",platforms:["Spotify"],estimatedTime:"1-2 weeks",cost:"Free (with API)",successRate:.92,revenueShare:.7},APPLE_MUSIC:{name:"Apple Music Direct",platforms:["Apple Music"],estimatedTime:"1-2 weeks",cost:"Free (with API)",successRate:.9,revenueShare:.7}};async function POST(e){try{let{releaseId:t,dsp:s,releaseData:a}=await e.json();if(!t||!s)return o.Z.json({success:!1,message:"Missing releaseId or dsp"},{status:400});let r=c[s];if(!r)return o.Z.json({success:!1,message:"Invalid DSP choice"},{status:400});let i=await n.dSPDistribution.create({data:{releaseId:t,dsp:s,dspName:r.name,status:"SUBMITTED",submissionId:`${s.toLowerCase()}_${Date.now()}`,platformUrls:{platforms:r.platforms,estimatedTime:r.estimatedTime,cost:r.cost},metadata:{successRate:r.successRate,revenueShare:r.revenueShare,submittedAt:new Date().toISOString(),releaseData:a||{}}}}),u="1-2 weeks"===r.estimatedTime?7:21;return setTimeout(async()=>{await n.dSPDistribution.update({where:{id:i.id},data:{status:"PROCESSING"}})},864e5),setTimeout(async()=>{await n.dSPDistribution.update({where:{id:i.id},data:{status:"LIVE",liveAt:new Date,platformUrls:{...i.platformUrls,spotifyUrl:`https://open.spotify.com/track/${Math.random().toString(36).substr(2,22)}`,appleMusicUrl:`https://music.apple.com/us/album/${Math.random().toString(36).substr(2,22)}`,amazonUrl:`https://music.amazon.com/albums/${Math.random().toString(36).substr(2,22)}`,youtubeUrl:`https://music.youtube.com/watch?v=${Math.random().toString(36).substr(2,22)}`}}})},864e5*u),o.Z.json({success:!0,message:"Distribution initiated successfully",data:{id:i.id,dsp:r.name,status:"SUBMITTED",platforms:r.platforms,estimatedTime:r.estimatedTime,cost:r.cost,submissionId:i.submissionId,submittedAt:i.submittedAt}})}catch(e){return console.error("Distribution error:",e),o.Z.json({success:!1,message:"Internal server error"},{status:500})}}async function GET(e){try{let{searchParams:t}=new URL(e.url),s=t.get("releaseId");if(!s)return o.Z.json({success:!1,message:"Release ID is required"},{status:400});let a=await n.dSPDistribution.findMany({where:{releaseId:s},include:{analytics:{orderBy:{date:"desc"},take:30}},orderBy:{createdAt:"desc"}});return o.Z.json({success:!0,data:a})}catch(e){return console.error("Distribution fetch error:",e),o.Z.json({success:!1,message:"Internal server error"},{status:500})}}let d=new r.AppRouteRouteModule({definition:{kind:i.x.APP_ROUTE,page:"/api/distribute/route",pathname:"/api/distribute",filename:"route",bundlePath:"app/api/distribute/route"},resolvedPagePath:"/Users/wizloxssd/Downloads/kushtunes-starter/app/api/distribute/route.ts",nextConfigOutput:"",userland:a}),{requestAsyncStorage:m,staticGenerationAsyncStorage:l,serverHooks:p,headerHooks:S,staticGenerationBailout:b}=d,f="/api/distribute/route"}};var t=require("../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),s=t.X(0,[729,798],()=>__webpack_exec__(5924));module.exports=s})();